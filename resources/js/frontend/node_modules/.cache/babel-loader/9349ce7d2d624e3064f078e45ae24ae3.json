{"ast":null,"code":"var _jsxFileName = \"/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/registers/UserRegister.jsx\";\nimport './UserRegister.scss';\nimport React, { Component, Fragment, createRef } from 'react';\nimport Main from '../templates/Main';\nimport axios from 'axios';\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`;\nconst headerProps = {\n  icon: 'sign-in',\n  title: 'Registrar',\n  subtitle: 'Você precisa estar logado para acessar o sistema.'\n};\nexport default class UserRegister extends Component {\n  constructor(props) {\n    super(props);\n    this.child = /*#__PURE__*/createRef();\n    this.state = {\n      name: props.name || '',\n      username: props.username || '',\n      password: props.password || '',\n      repeat_password: '',\n      toastMessage: 'false',\n      errorForm: [],\n      form: {\n        name: {\n          label: \"Nome\",\n          inputName: \"name\",\n          maxLength: 85\n        },\n        password: {\n          label: \"Senha\",\n          inputName: \"password\",\n          maxLength: 150\n        },\n        submitButton: \"Cadastrar\"\n      }\n    };\n  }\n\n  isValidUser() {\n    const {\n      name,\n      username,\n      password,\n      repeat_password\n    } = this.state;\n    const validate = {\n      errors: []\n    };\n\n    if (!name || name == '') {\n      validate.errors.push('O nome precisa ser preenchido.');\n    }\n\n    if (name && name != '') {\n      if (name.length < 3 || name.length > 85) {\n        validate.errors.push('O nome precisa ter de 3-85 caracteres.');\n      }\n    }\n\n    if (!username || username == '') {\n      validate.errors.push('O nome de usuário precisa ser preenchido.');\n    }\n\n    if (username && username != '') {\n      if (username.length < 4 || username.length > 20) {\n        validate.errors.push('O usuário precisa ter de 4-20 caracteres.');\n      }\n    }\n\n    if (!password || password == '') {\n      validate.errors.push('A senha precisa ser preenchida.');\n    }\n\n    if (!repeat_password || repeat_password == '') {\n      validate.errors.push('O campo repita a senha precisa ser preenchido.');\n    }\n\n    if (password && password != '') {\n      if (password.length < 8) {\n        validate.errors.push('A senha precisa ser ao menos 8 caracteres.');\n      }\n\n      if (password.length > 149) {\n        validate.errors.push('A senha precisa ser menor que 150 caracteres.');\n      }\n    }\n\n    if (repeat_password && repeat_password != '' && password && password != '') {\n      if (password !== repeat_password) {\n        validate.errors.push('As senhas digitadas precisam ser iguais');\n      }\n    }\n\n    if (validate.errors.length > 0) {\n      this.setState({\n        errorForm: validate.errors\n      });\n      return false;\n    } else {\n      this.setState({\n        errorForm: []\n      });\n      return true;\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.isValidUser()) {\n      let user = {\n        name: this.state.name,\n        username: this.state.username,\n        password: this.state.password\n      };\n      console.log(`${baseUrlBackend}/register-user`);\n      axios.post(`${baseUrlBackend}/register-user`, user).then(response => {\n        this.newToast(\"Usuário cadastrado com sucesso!\");\n        window.location.href = \"/listar-usuarios\";\n      }).catch(err => {\n        console.log(err.response.status);\n\n        switch (err.response.status) {\n          case 409:\n            this.newToast(\"Usuário já possui cadastro!\");\n            break;\n\n          default:\n            this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\");\n        }\n      });\n    } else {\n      if (!this.state.password || !this.state.username || !this.state.email) {\n        this.newToast(\"Todos os campos devem ser preenchidos.\");\n      } else {\n        this.newToast(\"Existem campos inválidos.\");\n      }\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      isInfinite: true\n    });\n  }\n\n  handleToggleCheck() {\n    this.setState({\n      isInfinite: !this.state.isInfinite\n    });\n  }\n\n  addDays(date, days) {\n    var result = new Date(date);\n    result.setDate(result.getDate() + days);\n    return result;\n  }\n\n  formInterval() {\n    const {\n      form\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: form.interval.startDate.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: form.interval.startDate.inputName,\n          id: form.interval.startDate.inputName,\n          value: this.state.startDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: form.interval.endDate.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"datetime-local\",\n          name: form.interval.endDate.inputName,\n          id: form.interval.endDate.inputName,\n          value: this.state.endDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 22\n    }, this);\n  }\n\n  messageError() {\n    const {\n      errorForm\n    } = this.state;\n\n    if (errorForm.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errors\",\n        children: errorForm.map(error => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: [\"-\", error]\n          }, error, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }, this);\n    }\n  }\n\n  render() {\n    const {\n      form,\n      name,\n      description,\n      isInfinite,\n      errorForm\n    } = this.state;\n    const dateInterval = this.formInterval();\n    const messError = this.messageError();\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n        children: [/*#__PURE__*/_jsxDEV(Toast, {\n          message: this.state.toastMessage,\n          time: 3000,\n          ref: this.child\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [messError, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: form.name.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: form.name.inputName,\n              name: form.name.inputName,\n              type: \"text\",\n              value: name,\n              maxLength: form.name.maxLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: form.description.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: form.description.inputName,\n              id: form.description.inputName,\n              rows: \"20\",\n              cols: \"50\",\n              maxlength: form.description.maxLength,\n              children: description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: form.infinite.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleToggleCheck,\n              defaultChecked: isInfinite,\n              id: form.infinite.inputName,\n              name: form.infinite.inputName,\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this), isInfinite && dateInterval, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex  flex-row-reverse\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.handleSubmit(e),\n              children: form.submitButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/registers/UserRegister.jsx"],"names":["React","Component","Fragment","createRef","Main","axios","Toast","baseUrl","baseUrlBackend","headerProps","icon","title","subtitle","UserRegister","constructor","props","child","state","name","username","password","repeat_password","toastMessage","errorForm","form","label","inputName","maxLength","submitButton","isValidUser","validate","errors","push","length","setState","handleSubmit","e","preventDefault","user","console","log","post","then","response","newToast","window","location","href","catch","err","status","email","componentDidMount","isInfinite","handleToggleCheck","addDays","date","days","result","Date","setDate","getDate","formInterval","interval","startDate","endDate","messageError","map","error","render","description","dateInterval","messError","infinite"],"mappings":";AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,cAAc,GAAI,GAAED,OAAO,CAACC,cAAe,EAAjD;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,SADU;AAEhBC,EAAAA,KAAK,EAAE,WAFS;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAApB;AAMA,eAAe,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAChDa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,gBAAab,SAAS,EAAtB;AAEA,SAAKc,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAEH,KAAK,CAACG,IAAN,IAAc,EADX;AAETC,MAAAA,QAAQ,EAAEJ,KAAK,CAACI,QAAN,IAAkB,EAFnB;AAGTC,MAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,IAAkB,EAHnB;AAITC,MAAAA,eAAe,EAAC,EAJP;AAKTC,MAAAA,YAAY,EAAC,OALJ;AAMTC,MAAAA,SAAS,EAAC,EAND;AAOTC,MAAAA,IAAI,EAAC;AACDN,QAAAA,IAAI,EAAC;AACDO,UAAAA,KAAK,EAAC,MADL;AAEDC,UAAAA,SAAS,EAAC,MAFT;AAGDC,UAAAA,SAAS,EAAC;AAHT,SADJ;AAMDP,QAAAA,QAAQ,EAAC;AACLK,UAAAA,KAAK,EAAC,OADD;AAELC,UAAAA,SAAS,EAAC,UAFL;AAGLC,UAAAA,SAAS,EAAC;AAHL,SANR;AAWDC,QAAAA,YAAY,EAAC;AAXZ;AAPI,KAAb;AAsBH;;AAEDC,EAAAA,WAAW,GAAG;AACV,UAAM;AAACX,MAAAA,IAAD;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA,QAAjB;AAA2BC,MAAAA;AAA3B,QAA8C,KAAKJ,KAAzD;AAEA,UAAMa,QAAQ,GAAG;AACbC,MAAAA,MAAM,EAAC;AADM,KAAjB;;AAIA,QAAI,CAACb,IAAD,IAASA,IAAI,IAAI,EAArB,EAAyB;AACrBY,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,gCAArB;AACH;;AACD,QAAId,IAAI,IAAIA,IAAI,IAAI,EAApB,EAAwB;AACpB,UAAGA,IAAI,CAACe,MAAL,GAAc,CAAd,IAAmBf,IAAI,CAACe,MAAL,GAAc,EAApC,EAAwC;AACpCH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,wCAArB;AACH;AACJ;;AACD,QAAI,CAACb,QAAD,IAAaA,QAAQ,IAAI,EAA7B,EAAiC;AAC7BW,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,2CAArB;AACH;;AACD,QAAIb,QAAQ,IAAIA,QAAQ,IAAI,EAA5B,EAAgC;AAC5B,UAAIA,QAAQ,CAACc,MAAT,GAAkB,CAAlB,IAAuBd,QAAQ,CAACc,MAAT,GAAkB,EAA7C,EAAiD;AAC7CH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,2CAArB;AACH;AACJ;;AACD,QAAI,CAACZ,QAAD,IAAaA,QAAQ,IAAI,EAA7B,EAAiC;AAC7BU,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,iCAArB;AACH;;AACD,QAAI,CAACX,eAAD,IAAoBA,eAAe,IAAI,EAA3C,EAA+C;AAC3CS,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,gDAArB;AACH;;AACD,QAAIZ,QAAQ,IAAIA,QAAQ,IAAI,EAA5B,EAAgC;AAC5B,UAAIA,QAAQ,CAACa,MAAT,GAAkB,CAAtB,EAAyB;AACrBH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,4CAArB;AACH;;AACD,UAAIZ,QAAQ,CAACa,MAAT,GAAkB,GAAtB,EAA2B;AACvBH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,+CAArB;AACH;AACJ;;AACD,QAAIX,eAAe,IAAIA,eAAe,IAAI,EAAtC,IAA4CD,QAA5C,IAAwDA,QAAQ,IAAI,EAAxE,EAA4E;AACxE,UAAIA,QAAQ,KAAKC,eAAjB,EAAkC;AAC/BS,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,yCAArB;AACF;AACJ;;AACD,QAAIF,QAAQ,CAACC,MAAT,CAAgBE,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,WAAKC,QAAL,CAAc;AAACX,QAAAA,SAAS,EAACO,QAAQ,CAACC;AAApB,OAAd;AACA,aAAO,KAAP;AACH,KAHD,MAGO;AACH,WAAKG,QAAL,CAAc;AAACX,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,aAAO,IAAP;AACH;AACJ;;AAEDY,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,KAAKR,WAAL,EAAJ,EAAwB;AAEpB,UAAIS,IAAI,GAAG;AACPpB,QAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IADT;AAEPC,QAAAA,QAAQ,EAAC,KAAKF,KAAL,CAAWE,QAFb;AAGPC,QAAAA,QAAQ,EAAC,KAAKH,KAAL,CAAWG;AAHb,OAAX;AAKAmB,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEhC,cAAe,gBAA9B;AACAH,MAAAA,KAAK,CAACoC,IAAN,CAAY,GAAEjC,cAAe,gBAA7B,EAA6C8B,IAA7C,EAAmDI,IAAnD,CAAwDC,QAAQ,IAAG;AAC/D,aAAKC,QAAL,CAAc,iCAAd;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;AACH,OAHD,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACZV,QAAAA,OAAO,CAACC,GAAR,CAAYS,GAAG,CAACN,QAAJ,CAAaO,MAAzB;;AACA,gBAAOD,GAAG,CAACN,QAAJ,CAAaO,MAApB;AACI,eAAK,GAAL;AACI,iBAAKN,QAAL,CAAc,6BAAd;AACJ;;AACA;AACM,iBAAKA,QAAL,CAAc,6DAAd;AALV;AAOH,OAZD;AAaH,KArBD,MAqBO;AACH,UAAI,CAAC,KAAK3B,KAAL,CAAWG,QAAZ,IAAwB,CAAC,KAAKH,KAAL,CAAWE,QAApC,IAAgD,CAAC,KAAKF,KAAL,CAAWkC,KAAhE,EAAuE;AACnE,aAAKP,QAAL,CAAc,wCAAd;AACH,OAFD,MAEO;AACH,aAAKA,QAAL,CAAc,2BAAd;AACH;AACJ;AAEJ;;AAEDQ,EAAAA,iBAAiB,GAAG;AAChB,SAAKlB,QAAL,CAAc;AAACmB,MAAAA,UAAU,EAAC;AAAZ,KAAd;AACH;;AAEDC,EAAAA,iBAAiB,GAAG;AACjB,SAAKpB,QAAL,CAAc;AACVmB,MAAAA,UAAU,EAAC,CAAC,KAAKpC,KAAL,CAAWoC;AADb,KAAd;AAGF;;AAEDE,EAAAA,OAAO,CAACC,IAAD,EAAOC,IAAP,EAAa;AAChB,QAAIC,MAAM,GAAG,IAAIC,IAAJ,CAASH,IAAT,CAAb;AACAE,IAAAA,MAAM,CAACE,OAAP,CAAeF,MAAM,CAACG,OAAP,KAAmBJ,IAAlC;AACA,WAAOC,MAAP;AACH;;AAEDI,EAAAA,YAAY,GAAG;AACX,UAAM;AAAEtC,MAAAA;AAAF,QAAW,KAAKP,KAAtB;AACI,wBAAS;AAAA,8BACT;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAA,oBAAQO,IAAI,CAACuC,QAAL,CAAcC,SAAd,CAAwBvC;AAAhC;AAAA;AAAA;AAAA;AAAA,gBADA,eAEQ;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAA6B,UAAA,IAAI,EAAED,IAAI,CAACuC,QAAL,CAAcC,SAAd,CAAwBtC,SAA3D;AAAsE,UAAA,EAAE,EAAEF,IAAI,CAACuC,QAAL,CAAcC,SAAd,CAAwBtC,SAAlG;AAA6G,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAW+C;AAA/H;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cADS,eAKT;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACA;AAAA,oBAAQxC,IAAI,CAACuC,QAAL,CAAcE,OAAd,CAAsBxC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADA,eAEQ;AAAO,UAAA,IAAI,EAAC,gBAAZ;AAA6B,UAAA,IAAI,EAAED,IAAI,CAACuC,QAAL,CAAcE,OAAd,CAAsBvC,SAAzD;AAAoE,UAAA,EAAE,EAAEF,IAAI,CAACuC,QAAL,CAAcE,OAAd,CAAsBvC,SAA9F;AAAyG,UAAA,KAAK,EAAE,KAAKT,KAAL,CAAWgD;AAA3H;AAAA;AAAA;AAAA;AAAA,gBAFR;AAAA;AAAA;AAAA;AAAA;AAAA,cALS;AAAA;AAAA;AAAA;AAAA;AAAA,YAAT;AAWP;;AAEDC,EAAAA,YAAY,GAAG;AACX,UAAM;AAAE3C,MAAAA;AAAF,QAAgB,KAAKN,KAA3B;;AACA,QAAIM,SAAS,CAACU,MAAV,GAAmB,CAAvB,EAA0B;AACxB,0BAAQ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACGV,SAAS,CAAC4C,GAAV,CAAeC,KAAD,IAAW;AACtB;AAAA;AAAA,4BAAkBA,KAAlB;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AACH,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAAR;AAKD;AACJ;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAE7C,MAAAA,IAAF;AAAQN,MAAAA,IAAR;AAAcoD,MAAAA,WAAd;AAA2BjB,MAAAA,UAA3B;AAAuC9B,MAAAA;AAAvC,QAAqD,KAAKN,KAAhE;AAEA,UAAMsD,YAAY,GAAG,KAAKT,YAAL,EAArB;AACA,UAAMU,SAAS,GAAG,KAAKN,YAAL,EAAlB;AAEA,wBAEI,QAAC,QAAD;AAAA,6BACI,QAAC,IAAD,OAAUzD,WAAV;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKQ,KAAL,CAAWK,YAA3B;AAAyC,UAAA,IAAI,EAAE,IAA/C;AAAqD,UAAA,GAAG,EAAE,KAAKN;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAA,qBACKwD,SADL,eAEI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQhD,IAAI,CAACN,IAAL,CAAUO;AAAlB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,EAAE,EAAED,IAAI,CAACN,IAAL,CAAUQ,SAArB;AAAgC,cAAA,IAAI,EAAEF,IAAI,CAACN,IAAL,CAAUQ,SAAhD;AAA2D,cAAA,IAAI,EAAC,MAAhE;AAAuE,cAAA,KAAK,EAAER,IAA9E;AAAoF,cAAA,SAAS,EAAEM,IAAI,CAACN,IAAL,CAAUS;AAAzG;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQH,IAAI,CAAC8C,WAAL,CAAiBA;AAAzB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAU,cAAA,IAAI,EAAE9C,IAAI,CAAC8C,WAAL,CAAiB5C,SAAjC;AAA4C,cAAA,EAAE,EAAEF,IAAI,CAAC8C,WAAL,CAAiB5C,SAAjE;AAA4E,cAAA,IAAI,EAAC,IAAjF;AAAsF,cAAA,IAAI,EAAC,IAA3F;AAAgG,cAAA,SAAS,EAAEF,IAAI,CAAC8C,WAAL,CAAiB3C,SAA5H;AAAA,wBAAwI2C;AAAxI;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAUI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQ9C,IAAI,CAACiD,QAAL,CAAchD;AAAtB;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAE,KAAK6B,iBAAtB;AAAyC,cAAA,cAAc,EAAED,UAAzD;AAAqE,cAAA,EAAE,EAAE7B,IAAI,CAACiD,QAAL,CAAc/C,SAAvF;AAAkG,cAAA,IAAI,EAAEF,IAAI,CAACiD,QAAL,CAAc/C,SAAtH;AAAiI,cAAA,IAAI,EAAC;AAAtI;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,EAcM2B,UAAU,IAAIkB,YAdpB,eAeI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAEnC,CAAC,IAAE,KAAKD,YAAL,CAAkBC,CAAlB,CAApB;AAAA,wBAA2CZ,IAAI,CAACI;AAAhD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AA2BH;;AA9L+C","sourcesContent":["import './UserRegister.scss'\nimport React, {Component, Fragment, createRef} from 'react'\nimport Main from '../templates/Main'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nconst headerProps = {\n    icon: 'sign-in',\n    title: 'Registrar',\n    subtitle: 'Você precisa estar logado para acessar o sistema.',\n}\n\nexport default class UserRegister extends Component {\n    constructor(props) {\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            name: props.name || '',\n            username: props.username || '',\n            password: props.password || '',\n            repeat_password:'',\n            toastMessage:'false',\n            errorForm:[],\n            form:{\n                name:{\n                    label:\"Nome\",\n                    inputName:\"name\",\n                    maxLength:85\n                },\n                password:{\n                    label:\"Senha\",\n                    inputName:\"password\",\n                    maxLength:150\n                },\n                submitButton:\"Cadastrar\"\n\n            }\n        }\n    }\n\n    isValidUser() {\n        const {name, username, password, repeat_password} = this.state\n\n        const validate = {\n            errors:[]\n        }\n\n        if (!name || name == '') {\n            validate.errors.push('O nome precisa ser preenchido.');\n        }\n        if (name && name != '') {\n            if(name.length < 3 || name.length > 85) {\n                validate.errors.push('O nome precisa ter de 3-85 caracteres.');\n            }\n        }\n        if (!username || username == '') {\n            validate.errors.push('O nome de usuário precisa ser preenchido.');\n        }\n        if (username && username != '') {\n            if (username.length < 4 || username.length > 20) {\n                validate.errors.push('O usuário precisa ter de 4-20 caracteres.');\n            }\n        }\n        if (!password || password == '') {\n            validate.errors.push('A senha precisa ser preenchida.');\n        }\n        if (!repeat_password || repeat_password == '') {\n            validate.errors.push('O campo repita a senha precisa ser preenchido.');\n        }\n        if (password && password != '') {\n            if (password.length < 8) {\n                validate.errors.push('A senha precisa ser ao menos 8 caracteres.');\n            }\n            if (password.length > 149) {\n                validate.errors.push('A senha precisa ser menor que 150 caracteres.');\n            }\n        }\n        if (repeat_password && repeat_password != '' && password && password != '') {\n            if (password !== repeat_password) {\n               validate.errors.push('As senhas digitadas precisam ser iguais');\n            }\n        }\n        if (validate.errors.length > 0) {\n            this.setState({errorForm:validate.errors})\n            return false\n        } else {\n            this.setState({errorForm:[]})\n            return true;\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if (this.isValidUser()) {\n\n            let user = {\n                name:this.state.name,\n                username:this.state.username,\n                password:this.state.password\n            }\n            console.log(`${baseUrlBackend}/register-user`)\n            axios.post(`${baseUrlBackend}/register-user`,user).then(response =>{\n                this.newToast(\"Usuário cadastrado com sucesso!\")\n                window.location.href = \"/listar-usuarios\"\n            }).catch(err => {\n                console.log(err.response.status)\n                switch(err.response.status){\n                    case 409: \n                        this.newToast(\"Usuário já possui cadastro!\");\n                    break\n                    default:  \n                          this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                }\n            })\n        } else {\n            if (!this.state.password || !this.state.username || !this.state.email) {\n                this.newToast(\"Todos os campos devem ser preenchidos.\")\n            } else {\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({isInfinite:true})\n    }\n\n    handleToggleCheck() {\n       this.setState({\n           isInfinite:!this.state.isInfinite\n       })\n    }\n\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    formInterval() {\n        const { form } = this.state\n            return  (<div>\n            <div className=\"form-control\">\n            <label>{form.interval.startDate.label}</label>\n                    <input type=\"datetime-local\" name={form.interval.startDate.inputName} id={form.interval.startDate.inputName} value={this.state.startDate} />\n            </div>\n            <div className=\"form-control\">\n            <label>{form.interval.endDate.label}</label>\n                    <input type=\"datetime-local\" name={form.interval.endDate.inputName} id={form.interval.endDate.inputName} value={this.state.endDate} />\n            </div>\n    </div>)\n  \n    }\n\n    messageError() {\n        const { errorForm } = this.state\n        if (errorForm.length > 0) {\n          return (<div className=\"errors\">\n                    {errorForm.map((error) => {\n                        <li key={error}>-{error}</li>\n                    })}\n                 </div>)\n        }\n    }\n\n    render() {\n\n        const { form, name, description, isInfinite, errorForm } = this.state\n\n        const dateInterval = this.formInterval()\n        const messError = this.messageError()\n\n        return (\n              \n            <Fragment>\n                <Main {...headerProps}>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                    <form>\n                        {messError}\n                        <div className=\"form-control\">\n                            <label>{form.name.label}</label>\n                            <input id={form.name.inputName} name={form.name.inputName} type=\"text\" value={name} maxLength={form.name.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{form.description.description}</label>\n                            <textarea name={form.description.inputName} id={form.description.inputName} rows=\"20\" cols=\"50\" maxlength={form.description.maxLength}>{description}</textarea>\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{form.infinite.label}</label>\n                            <input onChange={this.handleToggleCheck} defaultChecked={isInfinite} id={form.infinite.inputName} name={form.infinite.inputName} type=\"checkbox\" />\n                        </div>\n                         {isInfinite && dateInterval}\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <button onClick={e=>this.handleSubmit(e)}>{form.submitButton}</button>\n                        </div>\n                    </form>\n                </Main>\n            </Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}