{"ast":null,"code":"var _jsxFileName = \"/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/templates/FormLogin.jsx\";\nimport React, { Component, Fragment, createRef } from 'react';\nimport './FormLogin.scss';\nimport axios from 'axios';\nimport Toast from '../utils/Toast';\nimport Main from './Main';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst headerProps = {\n  icon: 'sign-in',\n  title: 'Login',\n  subtitle: 'Você precisa estar logado para acessar o sistema.'\n};\nconst baseUrlBackend = 'http://local.task.com.br/backend/';\nexport default class FormLogin extends Component {\n  constructor(props) {\n    super(props);\n    this.child = /*#__PURE__*/createRef();\n    this.state = {\n      login: {\n        input1_placeholder: props.input1_placeholder || '',\n        input2_placeholder: props.input2_placeholder || '',\n        input1_label: props.input1_label,\n        input2_label: props.input2_label,\n        //Label of this form\n        input1_textHelper: props.input1_textHelper || '',\n        //Default text message\n        input2_textHelper: props.input2_textHelper || '',\n        username: '',\n        password: '',\n        //Form value\n        input1_invalidList: [],\n        input2_invalidList: [],\n        //list of failed validations - if empity the form is valid\n        changed: false,\n        //This form has been changed at lest 1 time ? -used to not render error style when page load-\n        validation: props.validation,\n        setFormValid: this.setFormValid\n      }\n    };\n  }\n\n  setFormValid(form, value) {\n    switch (form) {\n      // case 'Username' : this.setState({username:value}); break\n      // case 'Password' : this.setState({password:value}); break\n      case 'username':\n        this.setState({\n          login: {\n            username: value\n          }\n        });\n        break;\n\n      case 'password':\n        this.setState({\n          login: {\n            password: value\n          }\n        });\n        break;\n\n      default:\n    } //this.setstate( {this.state[form]:value} )\n\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.state.login.username && this.state.login.password) {\n      let user = {\n        username: this.state.login.username,\n        password: this.state.login.password\n      };\n      axios.post(`${baseUrlBackend}/login`, user).then(response => {\n        // console.log(resp)\n        localStorage.setItem('SessionToken', response.data.token);\n        this.newToast(\"Bem vindo!\");\n        window.location.href = \"/home\";\n      }).catch(err => {\n        switch (err.response.status) {\n          case 401:\n            this.newToast(\"Nome de usuário ou senha errados. Por favor tente novamente.\");\n            break;\n\n          default:\n            this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\");\n        }\n      });\n    } else {\n      if (!this.state.login.password || !this.state.login.username) {\n        this.newToast(\"Todos os campos devem ser preenchidos.\");\n      } else {\n        this.newToast(\"Existem campos inválidos.\");\n      }\n    }\n  }\n\n  render() {\n    const {\n      login\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Toast, {\n        message: this.state.toastMessage,\n        time: 3000,\n        ref: this.child\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12 col-sm-6 col-md-6 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: login.input1_label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: `form-control`,\n              id: \"username\",\n              name: login.input1,\n              value: login.username,\n              placeholder: login.input1_placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: login.input2_label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: `form-control`,\n              id: \"password\",\n              name: login.input2,\n              value: login.password,\n              placeholder: login.input2_placeholder\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex  flex-row-reverse\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"btn btn-primary\",\n              type: \"submit\",\n              value: \"Entrar\",\n              onClick: e => this.handleSubmit(e)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/templates/FormLogin.jsx"],"names":["React","Component","Fragment","createRef","axios","Toast","Main","headerProps","icon","title","subtitle","baseUrlBackend","FormLogin","constructor","props","child","state","login","input1_placeholder","input2_placeholder","input1_label","input2_label","input1_textHelper","input2_textHelper","username","password","input1_invalidList","input2_invalidList","changed","validation","setFormValid","form","value","setState","handleSubmit","e","preventDefault","user","post","then","response","localStorage","setItem","data","token","newToast","window","location","href","catch","err","status","render","toastMessage","input1","input2"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, createRef } from 'react'\nimport './FormLogin.scss'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport Main from './Main';\n\nconst headerProps = {\n    icon: 'sign-in',\n    title: 'Login',\n    subtitle: 'Você precisa estar logado para acessar o sistema.',\n}\n\nconst baseUrlBackend = 'http://local.task.com.br/backend/'\n\nexport default class FormLogin extends Component {\n    constructor(props){\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            login: {\n                input1_placeholder: props.input1_placeholder || '',\n                input2_placeholder: props.input2_placeholder || '',\n                input1_label: props.input1_label,  \n                input2_label: props.input2_label,                              //Label of this form\n                input1_textHelper: props.input1_textHelper || '',        //Default text message\n                input2_textHelper: props.input2_textHelper || '',     \n                username: '',  \n                password: '',                                      //Form value\n                input1_invalidList: [], \n                input2_invalidList: [],                                //list of failed validations - if empity the form is valid\n                changed: false,                                 //This form has been changed at lest 1 time ? -used to not render error style when page load-\n                validation: props.validation,\n                setFormValid: this.setFormValid\n            }\n       \n        }\n    }\n\n    setFormValid(form, value){\n        switch(form){\n            // case 'Username' : this.setState({username:value}); break\n            // case 'Password' : this.setState({password:value}); break\n            case 'username' : \n            this.setState({\n                    login:{\n                        username: value\n                    }\n                }); \n                break\n            case 'password' : \n            this.setState({\n                    login:{\n                        password:value\n                    }\n                }); \n                break\n            default: \n        }\n        //this.setstate( {this.state[form]:value} )\n    }\n\n    handleSubmit(e){\n        e.preventDefault()\n        if (this.state.login.username && this.state.login.password) {\n            let user = {\n                username:this.state.login.username,\n                password:this.state.login.password\n            }\n            axios.post(`${baseUrlBackend}/login`, user).then(response => {\n               // console.log(resp)\n                localStorage.setItem('SessionToken', response.data.token)\n                this.newToast(\"Bem vindo!\");\n                window.location.href = \"/home\"\n            }).catch(err => {\n                switch(err.response.status){\n                    case 401: \n                         this.newToast(\"Nome de usuário ou senha errados. Por favor tente novamente.\");\n                    break\n                    default:  \n                         this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                }\n            })\n        }else{\n            if(!this.state.login.password || !this.state.login.username){\n                this.newToast(\"Todos os campos devem ser preenchidos.\")\n            }else{\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n        \n    }\n\n    \n    render(){\n           const { login } = this.state\n        return(\n            <Fragment>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                <Main {...headerProps}>\n                    <div className=\"col-12 col-sm-6 col-md-6 \">\n                        <div className=\"form-group\">\n                            <label>{login.input1_label}</label>\n                            <input type=\"text\" className={`form-control`} id=\"username\"\n                            name={login.input1} value={login.username} \n                            placeholder={login.input1_placeholder}/>\n                        </div>\n                        <div className=\"form-group\">\n                            <label>{login.input2_label}</label>\n                            <input type=\"password\" className={`form-control`} id=\"password\"\n                            name={login.input2} value={login.password} \n                            placeholder={login.input2_placeholder}/>\n                        </div>\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <input className=\"btn btn-primary\" type=\"submit\" value=\"Entrar\" onClick={(e) => this.handleSubmit(e)}/>\n                        </div>\n                    </div>\n                </Main>\n            </Fragment>\n        )}\n}"]},"metadata":{},"sourceType":"module"}