{"ast":null,"code":"var _jsxFileName = \"/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/registers/UserRegister.jsx\";\nimport './UserRegister.scss';\nimport React, { Component, Fragment, createRef } from 'react';\nimport Main from '../templates/Main';\nimport axios from 'axios';\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`;\nconst headerProps = {\n  icon: 'sign-in',\n  title: 'Registrar',\n  subtitle: 'Você precisa estar logado para acessar o sistema.'\n};\nexport default class UserRegister extends Component {\n  constructor(props) {\n    super(props);\n\n    this.newToast = message => {\n      this.setState({\n        toastMessage: message\n      }, () => {\n        this.child.current.show();\n      });\n    };\n\n    this.child = /*#__PURE__*/createRef();\n    this.state = {\n      name: props.name || '',\n      username: props.username || '',\n      password: props.password || '',\n      repeat_password: '',\n      toastMessage: 'false',\n      errorForm: [],\n      formRegister: {\n        name: {\n          label: \"Nome:\",\n          inputName: \"name\",\n          maxLength: 85\n        },\n        username: {\n          label: \"Usuário:\",\n          inputName: \"username\",\n          maxLength: 20\n        },\n        password: {\n          label: \"Senha:\",\n          inputName: \"password\",\n          maxLength: 150\n        },\n        repeat_password: {\n          label: \"Repita a senha:\",\n          inputName: \"repeat_password\",\n          maxLength: 150\n        },\n        submitButton: \"Cadastrar\"\n      }\n    };\n    this.handleNameChange = this.handleNameChange.bind(this);\n    this.handleUsernameChange = this.handleUsernameChange.bind(this);\n    this.handlePasswordChange = this.handlePasswordChange.bind(this);\n    this.handleRepeatPasswordChange = this.handleRepeatPasswordChange.bind(this);\n  }\n\n  isValidUser() {\n    const {\n      name,\n      username,\n      password,\n      repeat_password\n    } = this.state;\n    const validate = {\n      errors: []\n    };\n\n    if (!name || name == '') {\n      validate.errors.push('O nome precisa ser preenchido.');\n    }\n\n    if (name && name != '') {\n      if (name.length < 3 || name.length > 85) {\n        validate.errors.push('O nome precisa ter de 3-85 caracteres.');\n      }\n    }\n\n    if (!username || username == '') {\n      validate.errors.push('O nome de usuário precisa ser preenchido.');\n    }\n\n    if (username && username != '') {\n      if (username.length < 4 || username.length > 20) {\n        validate.errors.push('O usuário precisa ter de 4-20 caracteres.');\n      }\n    }\n\n    if (!password || password == '') {\n      validate.errors.push('A senha precisa ser preenchida.');\n    }\n\n    if (!repeat_password || repeat_password == '') {\n      validate.errors.push('O campo repita a senha precisa ser preenchido.');\n    }\n\n    if (password && password != '') {\n      if (password.length < 8) {\n        validate.errors.push('A senha precisa ser ao menos 8 caracteres.');\n      }\n\n      if (password.length > 149) {\n        validate.errors.push('A senha precisa ser menor que 150 caracteres.');\n      }\n    }\n\n    if (repeat_password && repeat_password != '' && password && password != '') {\n      if (password !== repeat_password) {\n        validate.errors.push('As senhas digitadas precisam ser iguais');\n      }\n    }\n\n    if (validate.errors.length > 0) {\n      this.setState({\n        errorForm: validate.errors\n      });\n      return false;\n    } else {\n      this.setState({\n        errorForm: []\n      });\n      return true;\n    }\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (this.isValidUser()) {\n      let user = {\n        name: this.state.name,\n        username: this.state.username,\n        password: this.state.password\n      };\n      console.log(`${baseUrlBackend}/register-user`);\n      axios.post(`${baseUrlBackend}/register-user`, user).then(response => {\n        this.newToast(\"Usuário cadastrado com sucesso!\");\n        window.location.href = \"/listar-usuarios\";\n      }).catch(err => {\n        console.log(err.response.status);\n\n        switch (err.response.status) {\n          case 409:\n            this.newToast(\"Usuário já possui cadastro!\");\n            break;\n\n          default:\n            this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\");\n        }\n      });\n    } else {\n      if (!this.state.name && !this.state.username && !this.state.password && !this.state.repeat_password) {\n        this.newToast(\"Todos os campos devem ser preenchidos.\");\n      } else {\n        this.newToast(\"Existem campos inválidos.\");\n      }\n    }\n  }\n\n  messageError() {\n    console.log('entrei...');\n    const {\n      errorForm\n    } = this.state;\n\n    if (errorForm.length > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errors\",\n        children: errorForm.map(error => {\n          /*#__PURE__*/\n          _jsxDEV(\"li\", {\n            children: [\"-\", error]\n          }, error, true, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }, this);\n    }\n  }\n\n  handleNameChange(event) {\n    this.setState({\n      name: event.target.value\n    });\n  }\n\n  handleUsernameChange(event) {\n    this.setState({\n      username: event.target.value\n    });\n  }\n\n  handlePasswordChange(event) {\n    this.setState({\n      password: event.target.value\n    });\n  }\n\n  handleRepeatPasswordChange(event) {\n    this.setState({\n      repeat_password: event.target.value\n    });\n  }\n\n  render() {\n    const {\n      formRegister,\n      name,\n      username,\n      password,\n      repeat_password\n    } = this.state;\n    const messError = this.messageError();\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Main, { ...headerProps,\n        children: [/*#__PURE__*/_jsxDEV(Toast, {\n          message: this.state.toastMessage,\n          time: 3000,\n          ref: this.child\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [messError, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: formRegister.name.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleNameChange,\n              id: formRegister.name.inputName,\n              name: formRegister.name.inputName,\n              type: \"text\",\n              value: name,\n              maxLength: formRegister.name.maxLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: formRegister.username.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleUsernameChange,\n              id: formRegister.username.inputName,\n              name: formRegister.username.inputName,\n              type: \"text\",\n              value: username,\n              maxLength: formRegister.username.maxLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: formRegister.password.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handlePasswordChange,\n              id: formRegister.password.inputName,\n              name: formRegister.password.inputName,\n              type: \"password\",\n              value: password,\n              maxLength: formRegister.password.maxLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-control\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: formRegister.repeat_password.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              onChange: this.handleRepeatPasswordChange,\n              id: formRegister.repeat_password.inputName,\n              name: formRegister.repeat_password.inputName,\n              type: \"password\",\n              value: repeat_password,\n              maxLength: formRegister.repeat_password.maxLength\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex  flex-row-reverse\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => this.handleSubmit(e),\n              children: formRegister.submitButton\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/registers/UserRegister.jsx"],"names":["React","Component","Fragment","createRef","Main","axios","Toast","baseUrl","baseUrlBackend","headerProps","icon","title","subtitle","UserRegister","constructor","props","newToast","message","setState","toastMessage","child","current","show","state","name","username","password","repeat_password","errorForm","formRegister","label","inputName","maxLength","submitButton","handleNameChange","bind","handleUsernameChange","handlePasswordChange","handleRepeatPasswordChange","isValidUser","validate","errors","push","length","handleSubmit","e","preventDefault","user","console","log","post","then","response","window","location","href","catch","err","status","messageError","map","error","event","target","value","render","messError"],"mappings":";AAAA,OAAO,qBAAP;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,SAApC,QAAoD,OAApD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,OAAP,MAAoB,sBAApB;;AAEA,MAAMC,cAAc,GAAI,GAAED,OAAO,CAACC,cAAe,EAAjD;AAEA,MAAMC,WAAW,GAAG;AAChBC,EAAAA,IAAI,EAAE,SADU;AAEhBC,EAAAA,KAAK,EAAE,WAFS;AAGhBC,EAAAA,QAAQ,EAAE;AAHM,CAApB;AAMA,eAAe,MAAMC,YAAN,SAA2BZ,SAA3B,CAAqC;AAChDa,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4InBC,QA5ImB,GA4IPC,OAAD,IAAa;AACpB,WAAKC,QAAL,CAAc;AAACC,QAAAA,YAAY,EAACF;AAAd,OAAd,EAAsC,MAAM;AACxC,aAAKG,KAAL,CAAWC,OAAX,CAAmBC,IAAnB;AACH,OAFD;AAGH,KAhJkB;;AAGf,SAAKF,KAAL,gBAAajB,SAAS,EAAtB;AAEA,SAAKoB,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAET,KAAK,CAACS,IAAN,IAAc,EADX;AAETC,MAAAA,QAAQ,EAAEV,KAAK,CAACU,QAAN,IAAkB,EAFnB;AAGTC,MAAAA,QAAQ,EAAEX,KAAK,CAACW,QAAN,IAAkB,EAHnB;AAITC,MAAAA,eAAe,EAAC,EAJP;AAKTR,MAAAA,YAAY,EAAC,OALJ;AAMTS,MAAAA,SAAS,EAAC,EAND;AAOTC,MAAAA,YAAY,EAAC;AACTL,QAAAA,IAAI,EAAC;AACDM,UAAAA,KAAK,EAAC,OADL;AAEDC,UAAAA,SAAS,EAAC,MAFT;AAGDC,UAAAA,SAAS,EAAC;AAHT,SADI;AAMTP,QAAAA,QAAQ,EAAC;AACLK,UAAAA,KAAK,EAAC,UADD;AAELC,UAAAA,SAAS,EAAC,UAFL;AAGLC,UAAAA,SAAS,EAAC;AAHL,SANA;AAWTN,QAAAA,QAAQ,EAAC;AACLI,UAAAA,KAAK,EAAC,QADD;AAELC,UAAAA,SAAS,EAAC,UAFL;AAGLC,UAAAA,SAAS,EAAC;AAHL,SAXA;AAgBTL,QAAAA,eAAe,EAAC;AACZG,UAAAA,KAAK,EAAC,iBADM;AAEZC,UAAAA,SAAS,EAAC,iBAFE;AAGZC,UAAAA,SAAS,EAAC;AAHE,SAhBP;AAqBTC,QAAAA,YAAY,EAAC;AArBJ;AAPJ,KAAb;AAgCA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA,SAAKC,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKE,oBAAL,GAA4B,KAAKA,oBAAL,CAA0BF,IAA1B,CAA+B,IAA/B,CAA5B;AACA,SAAKG,0BAAL,GAAkC,KAAKA,0BAAL,CAAgCH,IAAhC,CAAqC,IAArC,CAAlC;AAEH;;AAEDI,EAAAA,WAAW,GAAG;AACV,UAAM;AAACf,MAAAA,IAAD;AAAOC,MAAAA,QAAP;AAAiBC,MAAAA,QAAjB;AAA2BC,MAAAA;AAA3B,QAA8C,KAAKJ,KAAzD;AAEA,UAAMiB,QAAQ,GAAG;AACbC,MAAAA,MAAM,EAAC;AADM,KAAjB;;AAIA,QAAI,CAACjB,IAAD,IAASA,IAAI,IAAI,EAArB,EAAyB;AACrBgB,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,gCAArB;AACH;;AACD,QAAIlB,IAAI,IAAIA,IAAI,IAAI,EAApB,EAAwB;AACpB,UAAGA,IAAI,CAACmB,MAAL,GAAc,CAAd,IAAmBnB,IAAI,CAACmB,MAAL,GAAc,EAApC,EAAwC;AACpCH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,wCAArB;AACH;AACJ;;AACD,QAAI,CAACjB,QAAD,IAAaA,QAAQ,IAAI,EAA7B,EAAiC;AAC7Be,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,2CAArB;AACH;;AACD,QAAIjB,QAAQ,IAAIA,QAAQ,IAAI,EAA5B,EAAgC;AAC5B,UAAIA,QAAQ,CAACkB,MAAT,GAAkB,CAAlB,IAAuBlB,QAAQ,CAACkB,MAAT,GAAkB,EAA7C,EAAiD;AAC7CH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,2CAArB;AACH;AACJ;;AACD,QAAI,CAAChB,QAAD,IAAaA,QAAQ,IAAI,EAA7B,EAAiC;AAC7Bc,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,iCAArB;AACH;;AACD,QAAI,CAACf,eAAD,IAAoBA,eAAe,IAAI,EAA3C,EAA+C;AAC3Ca,MAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,gDAArB;AACH;;AACD,QAAIhB,QAAQ,IAAIA,QAAQ,IAAI,EAA5B,EAAgC;AAC5B,UAAIA,QAAQ,CAACiB,MAAT,GAAkB,CAAtB,EAAyB;AACrBH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,4CAArB;AACH;;AACD,UAAIhB,QAAQ,CAACiB,MAAT,GAAkB,GAAtB,EAA2B;AACvBH,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,+CAArB;AACH;AACJ;;AACD,QAAIf,eAAe,IAAIA,eAAe,IAAI,EAAtC,IAA4CD,QAA5C,IAAwDA,QAAQ,IAAI,EAAxE,EAA4E;AACxE,UAAIA,QAAQ,KAAKC,eAAjB,EAAkC;AAC/Ba,QAAAA,QAAQ,CAACC,MAAT,CAAgBC,IAAhB,CAAqB,yCAArB;AACF;AACJ;;AACD,QAAIF,QAAQ,CAACC,MAAT,CAAgBE,MAAhB,GAAyB,CAA7B,EAAgC;AAC5B,WAAKzB,QAAL,CAAc;AAACU,QAAAA,SAAS,EAACY,QAAQ,CAACC;AAApB,OAAd;AACA,aAAO,KAAP;AACH,KAHD,MAGO;AACH,WAAKvB,QAAL,CAAc;AAACU,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,aAAO,IAAP;AACH;AACJ;;AAEDgB,EAAAA,YAAY,CAACC,CAAD,EAAI;AACZA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,KAAKP,WAAL,EAAJ,EAAwB;AAEpB,UAAIQ,IAAI,GAAG;AACPvB,QAAAA,IAAI,EAAC,KAAKD,KAAL,CAAWC,IADT;AAEPC,QAAAA,QAAQ,EAAC,KAAKF,KAAL,CAAWE,QAFb;AAGPC,QAAAA,QAAQ,EAAC,KAAKH,KAAL,CAAWG;AAHb,OAAX;AAKAsB,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEzC,cAAe,gBAA9B;AACAH,MAAAA,KAAK,CAAC6C,IAAN,CAAY,GAAE1C,cAAe,gBAA7B,EAA6CuC,IAA7C,EAAmDI,IAAnD,CAAwDC,QAAQ,IAAG;AAC/D,aAAKpC,QAAL,CAAc,iCAAd;AACAqC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,kBAAvB;AACH,OAHD,EAGGC,KAHH,CAGSC,GAAG,IAAI;AACZT,QAAAA,OAAO,CAACC,GAAR,CAAYQ,GAAG,CAACL,QAAJ,CAAaM,MAAzB;;AACA,gBAAOD,GAAG,CAACL,QAAJ,CAAaM,MAApB;AACI,eAAK,GAAL;AACI,iBAAK1C,QAAL,CAAc,6BAAd;AACJ;;AACA;AACM,iBAAKA,QAAL,CAAc,6DAAd;AALV;AAOH,OAZD;AAaH,KArBD,MAqBO;AACH,UAAI,CAAC,KAAKO,KAAL,CAAWC,IAAZ,IAAoB,CAAC,KAAKD,KAAL,CAAWE,QAAhC,IAA4C,CAAC,KAAKF,KAAL,CAAWG,QAAxD,IAAoE,CAAC,KAAKH,KAAL,CAAWI,eAApF,EAAsG;AAClG,aAAKX,QAAL,CAAc,wCAAd;AACH,OAFD,MAEO;AACH,aAAKA,QAAL,CAAc,2BAAd;AACH;AACJ;AAEJ;;AAED2C,EAAAA,YAAY,GAAG;AACXX,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAM;AAAErB,MAAAA;AAAF,QAAgB,KAAKL,KAA3B;;AACA,QAAIK,SAAS,CAACe,MAAV,GAAmB,CAAvB,EAA0B;AACxB,0BAAQ;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,kBACGf,SAAS,CAACgC,GAAV,CAAeC,KAAD,IAAW;AACtB;AAAA;AAAA,4BAAkBA,KAAlB;AAAA,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA;AACH,SAFA;AADH;AAAA;AAAA;AAAA;AAAA,cAAR;AAKD;AACJ;;AAQD3B,EAAAA,gBAAgB,CAAC4B,KAAD,EAAQ;AACpB,SAAK5C,QAAL,CAAc;AACVM,MAAAA,IAAI,EAACsC,KAAK,CAACC,MAAN,CAAaC;AADR,KAAd;AAGH;;AAED5B,EAAAA,oBAAoB,CAAC0B,KAAD,EAAQ;AACxB,SAAK5C,QAAL,CAAc;AACVO,MAAAA,QAAQ,EAACqC,KAAK,CAACC,MAAN,CAAaC;AADZ,KAAd;AAGH;;AAED3B,EAAAA,oBAAoB,CAACyB,KAAD,EAAQ;AACxB,SAAK5C,QAAL,CAAc;AACVQ,MAAAA,QAAQ,EAACoC,KAAK,CAACC,MAAN,CAAaC;AADZ,KAAd;AAGH;;AAED1B,EAAAA,0BAA0B,CAACwB,KAAD,EAAQ;AAC9B,SAAK5C,QAAL,CAAc;AACVS,MAAAA,eAAe,EAACmC,KAAK,CAACC,MAAN,CAAaC;AADnB,KAAd;AAGH;;AAEDC,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEpC,MAAAA,YAAF;AAAgBL,MAAAA,IAAhB;AAAsBC,MAAAA,QAAtB;AAAgCC,MAAAA,QAAhC;AAA0CC,MAAAA;AAA1C,QAA8D,KAAKJ,KAAzE;AAEA,UAAM2C,SAAS,GAAG,KAAKP,YAAL,EAAlB;AAEA,wBAEI,QAAC,QAAD;AAAA,6BACI,QAAC,IAAD,OAAUlD,WAAV;AAAA,gCACA,QAAC,KAAD;AAAO,UAAA,OAAO,EAAE,KAAKc,KAAL,CAAWJ,YAA3B;AAAyC,UAAA,IAAI,EAAE,IAA/C;AAAqD,UAAA,GAAG,EAAE,KAAKC;AAA/D;AAAA;AAAA;AAAA;AAAA,gBADA,eAEI;AAAA,qBACK8C,SADL,eAEI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQrC,YAAY,CAACL,IAAb,CAAkBM;AAA1B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAE,KAAKI,gBAAtB;AAAwC,cAAA,EAAE,EAAEL,YAAY,CAACL,IAAb,CAAkBO,SAA9D;AAAyE,cAAA,IAAI,EAAEF,YAAY,CAACL,IAAb,CAAkBO,SAAjG;AAA4G,cAAA,IAAI,EAAC,MAAjH;AAAwH,cAAA,KAAK,EAAEP,IAA/H;AAAqI,cAAA,SAAS,EAAEK,YAAY,CAACL,IAAb,CAAkBQ;AAAlK;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAMI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQH,YAAY,CAACJ,QAAb,CAAsBK;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAE,KAAKM,oBAAtB;AAA4C,cAAA,EAAE,EAAEP,YAAY,CAACJ,QAAb,CAAsBM,SAAtE;AAAiF,cAAA,IAAI,EAAEF,YAAY,CAACJ,QAAb,CAAsBM,SAA7G;AAAwH,cAAA,IAAI,EAAC,MAA7H;AAAoI,cAAA,KAAK,EAAEN,QAA3I;AAAqJ,cAAA,SAAS,EAAEI,YAAY,CAACJ,QAAb,CAAsBO;AAAtL;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAUI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQH,YAAY,CAACH,QAAb,CAAsBI;AAA9B;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAE,KAAKO,oBAAtB;AAA4C,cAAA,EAAE,EAAER,YAAY,CAACH,QAAb,CAAsBK,SAAtE;AAAiF,cAAA,IAAI,EAAEF,YAAY,CAACH,QAAb,CAAsBK,SAA7G;AAAwH,cAAA,IAAI,EAAC,UAA7H;AAAwI,cAAA,KAAK,EAAEL,QAA/I;AAAyJ,cAAA,SAAS,EAAEG,YAAY,CAACH,QAAb,CAAsBM;AAA1L;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ,eAcI;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,oCACI;AAAA,wBAAQH,YAAY,CAACF,eAAb,CAA6BG;AAArC;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAO,cAAA,QAAQ,EAAE,KAAKQ,0BAAtB;AAAkD,cAAA,EAAE,EAAET,YAAY,CAACF,eAAb,CAA6BI,SAAnF;AAA8F,cAAA,IAAI,EAAEF,YAAY,CAACF,eAAb,CAA6BI,SAAjI;AAA4I,cAAA,IAAI,EAAC,UAAjJ;AAA4J,cAAA,KAAK,EAAEJ,eAAnK;AAAoL,cAAA,SAAS,EAAEE,YAAY,CAACF,eAAb,CAA6BK;AAA5N;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ,eAkBI;AAAK,YAAA,SAAS,EAAC,0BAAf;AAAA,mCACI;AAAQ,cAAA,OAAO,EAAEa,CAAC,IAAE,KAAKD,YAAL,CAAkBC,CAAlB,CAApB;AAAA,wBAA2ChB,YAAY,CAACI;AAAxD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AA8BH;;AA/M+C","sourcesContent":["import './UserRegister.scss'\nimport React, {Component, Fragment, createRef} from 'react'\nimport Main from '../templates/Main'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nconst headerProps = {\n    icon: 'sign-in',\n    title: 'Registrar',\n    subtitle: 'Você precisa estar logado para acessar o sistema.',\n}\n\nexport default class UserRegister extends Component {\n    constructor(props) {\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            name: props.name || '',\n            username: props.username || '',\n            password: props.password || '',\n            repeat_password:'',\n            toastMessage:'false',\n            errorForm:[],\n            formRegister:{\n                name:{\n                    label:\"Nome:\",\n                    inputName:\"name\",\n                    maxLength:85\n                },\n                username:{\n                    label:\"Usuário:\",\n                    inputName:\"username\",\n                    maxLength:20\n                },\n                password:{\n                    label:\"Senha:\",\n                    inputName:\"password\",\n                    maxLength:150\n                },\n                repeat_password:{\n                    label:\"Repita a senha:\",\n                    inputName:\"repeat_password\",\n                    maxLength:150\n                },\n                submitButton:\"Cadastrar\"\n\n            }\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleRepeatPasswordChange = this.handleRepeatPasswordChange.bind(this)\n\n    }\n\n    isValidUser() {\n        const {name, username, password, repeat_password} = this.state\n\n        const validate = {\n            errors:[]\n        }\n\n        if (!name || name == '') {\n            validate.errors.push('O nome precisa ser preenchido.');\n        }\n        if (name && name != '') {\n            if(name.length < 3 || name.length > 85) {\n                validate.errors.push('O nome precisa ter de 3-85 caracteres.');\n            }\n        }\n        if (!username || username == '') {\n            validate.errors.push('O nome de usuário precisa ser preenchido.');\n        }\n        if (username && username != '') {\n            if (username.length < 4 || username.length > 20) {\n                validate.errors.push('O usuário precisa ter de 4-20 caracteres.');\n            }\n        }\n        if (!password || password == '') {\n            validate.errors.push('A senha precisa ser preenchida.');\n        }\n        if (!repeat_password || repeat_password == '') {\n            validate.errors.push('O campo repita a senha precisa ser preenchido.');\n        }\n        if (password && password != '') {\n            if (password.length < 8) {\n                validate.errors.push('A senha precisa ser ao menos 8 caracteres.');\n            }\n            if (password.length > 149) {\n                validate.errors.push('A senha precisa ser menor que 150 caracteres.');\n            }\n        }\n        if (repeat_password && repeat_password != '' && password && password != '') {\n            if (password !== repeat_password) {\n               validate.errors.push('As senhas digitadas precisam ser iguais');\n            }\n        }\n        if (validate.errors.length > 0) {\n            this.setState({errorForm:validate.errors})\n            return false\n        } else {\n            this.setState({errorForm:[]})\n            return true;\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if (this.isValidUser()) {\n\n            let user = {\n                name:this.state.name,\n                username:this.state.username,\n                password:this.state.password\n            }\n            console.log(`${baseUrlBackend}/register-user`)\n            axios.post(`${baseUrlBackend}/register-user`,user).then(response =>{\n                this.newToast(\"Usuário cadastrado com sucesso!\")\n                window.location.href = \"/listar-usuarios\"\n            }).catch(err => {\n                console.log(err.response.status)\n                switch(err.response.status){\n                    case 409: \n                        this.newToast(\"Usuário já possui cadastro!\");\n                    break\n                    default:  \n                          this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                }\n            })\n        } else {\n            if (!this.state.name && !this.state.username && !this.state.password && !this.state.repeat_password ) {\n                this.newToast(\"Todos os campos devem ser preenchidos.\")\n            } else {\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n\n    }\n\n    messageError() {\n        console.log('entrei...')\n        const { errorForm } = this.state\n        if (errorForm.length > 0) {\n          return (<div className=\"errors\">\n                    {errorForm.map((error) => {\n                        <li key={error}>-{error}</li>\n                    })}\n                 </div>)\n        }\n    }\n\n    newToast = (message) => {\n        this.setState({toastMessage:message}, () => {\n            this.child.current.show()\n        })\n    }\n\n    handleNameChange(event) {\n        this.setState({\n            name:event.target.value\n        })\n    }\n\n    handleUsernameChange(event) {\n        this.setState({\n            username:event.target.value\n        })\n    }\n\n    handlePasswordChange(event) {\n        this.setState({\n            password:event.target.value\n        })\n    }\n\n    handleRepeatPasswordChange(event) {\n        this.setState({\n            repeat_password:event.target.value\n        })\n    }\n\n    render() {\n\n        const { formRegister, name, username, password, repeat_password } = this.state\n\n        const messError = this.messageError()\n\n        return (\n              \n            <Fragment>\n                <Main {...headerProps}>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                    <form>\n                        {messError}\n                        <div className=\"form-control\">\n                            <label>{formRegister.name.label}</label>\n                            <input onChange={this.handleNameChange} id={formRegister.name.inputName} name={formRegister.name.inputName} type=\"text\" value={name} maxLength={formRegister.name.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.username.label}</label>\n                            <input onChange={this.handleUsernameChange} id={formRegister.username.inputName} name={formRegister.username.inputName} type=\"text\" value={username} maxLength={formRegister.username.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.password.label}</label>\n                            <input onChange={this.handlePasswordChange} id={formRegister.password.inputName} name={formRegister.password.inputName} type=\"password\" value={password} maxLength={formRegister.password.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.repeat_password.label}</label>\n                            <input onChange={this.handleRepeatPasswordChange} id={formRegister.repeat_password.inputName} name={formRegister.repeat_password.inputName} type=\"password\" value={repeat_password} maxLength={formRegister.repeat_password.maxLength} />\n                        </div>\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <button onClick={e=>this.handleSubmit(e)}>{formRegister.submitButton}</button>\n                        </div>\n                    </form>\n                </Main>\n            </Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}