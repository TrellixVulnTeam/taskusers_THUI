{"ast":null,"code":"import _objectSpread from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import'./EditTask.scss';import React,{Component,Fragment,createRef}from'react';import Main from'../templates/Main';import axios from'axios';import Toast from'../utils/Toast';import baseUrl from'../../config/baseUrl';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var baseUrlBackend=\"\".concat(baseUrl.baseUrlBackend);var headerProps={icon:'calendar-check-o',title:'Editar Tarefa',subtitle:'Preencha o formulário abaixo com as informações da tarefa.'};var currentDate=new Date();var EditTask=/*#__PURE__*/function(_Component){_inherits(EditTask,_Component);var _super=_createSuper(EditTask);function EditTask(props){var _this;_classCallCheck(this,EditTask);_this=_super.call(this,props);_this.newToast=function(message){_this.setState({toastMessage:message},function(){_this.child.current.show();});};_this.child=/*#__PURE__*/createRef();_this.state={id:props.id,name:props.name||\"\",description:props.description||\"\",startDate:props.startDate||_this.formmatedCurrentDate(),endDate:props.endDate||_this.formmatedCurrentDate(_this.addDays(currentDate,10)),isInfinite:props.isInfinite||false,toastMessage:\"false\",formRegister:{name:{label:\"Título da tarefa: \",inputName:\"task\",maxLength:45},description:{label:\"Descrição da tarefa: \",inputName:\"description\",maxLength:1000},infinite:{label:\"Infinito\",inputName:\"infinite\"},interval:{startDate:{label:\"Data inicial:\",inputName:\"start_date\"},endDate:{label:\"Data final:\",inputName:\"end_date\"}},permissionSubit:false,submitButton:\"Cadastrar\"}};_this.handleSubmit=_this.handleSubmit.bind(_assertThisInitialized(_this));_this.handleToggleCheck=_this.handleToggleCheck.bind(_assertThisInitialized(_this));_this.handleTaskNameChange=_this.handleTaskNameChange.bind(_assertThisInitialized(_this));_this.handleTaskDescriptionChange=_this.handleTaskDescriptionChange.bind(_assertThisInitialized(_this));_this.handleStartDateChange=_this.handleStartDateChange.bind(_assertThisInitialized(_this));_this.handleEndDateChange=_this.handleEndDateChange.bind(_assertThisInitialized(_this));return _this;}_createClass(EditTask,[{key:\"formmatedCurrentDate\",value:function formmatedCurrentDate(theDate){var dateTime=theDate||currentDate;return new Date(dateTime.getTime()-dateTime.getTimezoneOffset()*60000).toISOString().substring(0,19);}},{key:\"handleSubmit\",value:function handleSubmit(e){var _this2=this;e.preventDefault();if(this.state.name&&this.state.name!==''){this.setState({permissionSubit:true});if(!this.state.isInfinite){if(!this.state.startDate){this.newToast(\"A data inicial precisa ser registrada.\");this.setState({permissionSubit:false});}if(!this.state.endDate){this.newToast(\"A data final precisa ser registrada.\");this.setState({permissionSubit:false});}if(this.state.startDate&&this.state.startDate){if(new Date(this.state.startDate).getTime()>new Date(this.state.endDate).getTime()){this.newToast(\"A data final precisa ser maior que a data inicial.\");this.setState({permissionSubit:false});}}}else{this.setState({permissionSubit:true});}if(this.state.permissionSubit){var task={id_task:this.state.id,name:this.state.name,description:this.state.description,isInfinite:this.state.isInfinite,endDate:this.state.startDate,startDate:this.state.endDate};console.log(\"\".concat(baseUrlBackend,\"/update-task\"));axios.post(\"\".concat(baseUrlBackend,\"/update-task\"),task).then(function(resp){localStorage.setItem('SessionToken',resp.data.token);_this2.newToast(\"Tarefa atualizada com sucesso!\");window.location.href=\"/home\";}).catch(function(err){console.log(err.response.status);switch(err.response.status){case 409:_this2.newToast(\"Tarefa não encontrada!\");break;default:_this2.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\");}});}}else{if(!this.state.name){this.newToast(\"Preencha o nome da tarefa.\");}else{this.newToast(\"Existem campos inválidos.\");}}}},{key:\"componentDidMount\",value:function componentDidMount(){this.setState({isInfinite:true});}},{key:\"handleToggleCheck\",value:function handleToggleCheck(){this.setState({isInfinite:!this.state.isInfinite});}},{key:\"handleTaskNameChange\",value:function handleTaskNameChange(event){this.setState({name:event.target.value});}},{key:\"handleTaskDescriptionChange\",value:function handleTaskDescriptionChange(event){this.setState({description:event.target.value});}},{key:\"handleStartDateChange\",value:function handleStartDateChange(event){this.setState({startDate:event.target.value});}},{key:\"handleEndDateChange\",value:function handleEndDateChange(event){this.setState({endDate:event.target.value});}},{key:\"addDays\",value:function addDays(date,days){var result=new Date(date);result.setDate(result.getDate()+days);return result;}},{key:\"formInterval\",value:function formInterval(){var _this$state=this.state,formRegister=_this$state.formRegister,startDate=_this$state.startDate,endDate=_this$state.endDate;return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:formRegister.interval.startDate.label}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",onChange:this.handleStartDateChange,name:formRegister.interval.startDate.inputName,id:formRegister.interval.startDate.inputName,value:startDate,min:\"2018-06-07T00:00\",max:\"2018-06-14T00:00\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:formRegister.interval.endDate.label}),/*#__PURE__*/_jsx(\"input\",{type:\"datetime-local\",onChange:this.handleEndDateChange,name:formRegister.interval.endDate.inputName,id:formRegister.interval.endDate.inputName,value:endDate})]})]});}},{key:\"render\",value:function render(){var _this3=this;var _this$state2=this.state,formRegister=_this$state2.formRegister,isInfinite=_this$state2.isInfinite,name=_this$state2.name,description=_this$state2.description;var dateInterval=this.formInterval();return/*#__PURE__*/_jsx(Fragment,{children:/*#__PURE__*/_jsxs(Main,_objectSpread(_objectSpread({},headerProps),{},{children:[/*#__PURE__*/_jsx(Toast,{message:this.state.toastMessage,time:3000,ref:this.child}),/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:formRegister.name.label}),/*#__PURE__*/_jsx(\"input\",{id:formRegister.name.inputName,name:formRegister.name.inputName,onChange:this.handleTaskNameChange,type:\"text\",value:name,maxLength:formRegister.name.maxLength})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:formRegister.description.description}),/*#__PURE__*/_jsx(\"textarea\",{name:formRegister.description.inputName,onChange:this.handleTaskDescriptionChange,id:formRegister.description.inputName,rows:\"20\",cols:\"50\",maxlength:formRegister.description.maxLength,children:description})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-control\",children:[/*#__PURE__*/_jsx(\"label\",{children:formRegister.infinite.label}),/*#__PURE__*/_jsx(\"input\",{onChange:this.handleToggleCheck,value:isInfinite,id:formRegister.infinite.inputName,name:formRegister.infinite.inputName,type:\"checkbox\"})]}),isInfinite&&dateInterval,/*#__PURE__*/_jsx(\"div\",{className:\"d-flex  flex-row-reverse\",children:/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(e){return _this3.handleSubmit(e);},children:formRegister.submitButton})})]})]}))});}}]);return EditTask;}(Component);export{EditTask as default};","map":{"version":3,"sources":["/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/src/components/edit/EditTask.jsx"],"names":["React","Component","Fragment","createRef","Main","axios","Toast","baseUrl","baseUrlBackend","headerProps","icon","title","subtitle","currentDate","Date","EditTask","props","newToast","message","setState","toastMessage","child","current","show","state","id","name","description","startDate","formmatedCurrentDate","endDate","addDays","isInfinite","formRegister","label","inputName","maxLength","infinite","interval","permissionSubit","submitButton","handleSubmit","bind","handleToggleCheck","handleTaskNameChange","handleTaskDescriptionChange","handleStartDateChange","handleEndDateChange","theDate","dateTime","getTime","getTimezoneOffset","toISOString","substring","e","preventDefault","task","id_task","console","log","post","then","resp","localStorage","setItem","data","token","window","location","href","catch","err","response","status","event","target","value","date","days","result","setDate","getDate","dateInterval","formInterval"],"mappings":"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","sourcesContent":["import './EditTask.scss'\nimport React, {Component, Fragment, createRef} from 'react'\nimport Main from '../templates/Main'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nconst headerProps = {\n    icon: 'calendar-check-o',\n    title: 'Editar Tarefa',\n    subtitle: 'Preencha o formulário abaixo com as informações da tarefa.',\n}\nconst currentDate = new Date()\n\nexport default class EditTask extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            id: props.id,\n            name: props.name || \"\",\n            description: props.description || \"\",\n            startDate: props.startDate || this.formmatedCurrentDate(),\n            endDate: props.endDate || this.formmatedCurrentDate(this.addDays(currentDate, 10)),\n            isInfinite: props.isInfinite || false,\n            toastMessage:\"false\",\n            formRegister:{\n                name:{\n                    label:\"Título da tarefa: \",\n                    inputName:\"task\",\n                    maxLength:45\n                },\n                description:{\n                    label:\"Descrição da tarefa: \",\n                    inputName:\"description\",\n                    maxLength:1000\n                },\n                infinite:{\n                    label: \"Infinito\",\n                    inputName:\"infinite\"\n                },\n                interval:{\n                    startDate:{\n                        label:\"Data inicial:\",\n                        inputName:\"start_date\"\n                    },\n                    endDate:{\n                        label: \"Data final:\",\n                        inputName: \"end_date\"\n                    }\n                },\n                permissionSubit:false,\n                submitButton:\"Cadastrar\"\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleToggleCheck = this.handleToggleCheck.bind(this)\n        this.handleTaskNameChange = this.handleTaskNameChange.bind(this)\n        this.handleTaskDescriptionChange = this.handleTaskDescriptionChange.bind(this)\n        this.handleStartDateChange = this.handleStartDateChange.bind(this)\n        this.handleEndDateChange = this.handleEndDateChange.bind(this)\n\n    }\n\n    formmatedCurrentDate(theDate) {\n        const dateTime = theDate || currentDate\n        return new Date(dateTime.getTime()-dateTime.getTimezoneOffset()*60000).toISOString().substring(0,19)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if(this.state.name && this.state.name !== '') {\n\n            this.setState({\n                permissionSubit:true\n            })\n\n            if(!this.state.isInfinite) {\n              \n                if(!this.state.startDate) {\n                    this.newToast(\"A data inicial precisa ser registrada.\")\n                    this.setState({\n                        permissionSubit:false\n                    })\n                }\n                if(!this.state.endDate) {\n                    this.newToast(\"A data final precisa ser registrada.\")\n                    this.setState({\n                        permissionSubit:false\n                    })\n                }\n                if(this.state.startDate && this.state.startDate) {\n                    if(new Date(this.state.startDate).getTime() > new Date(this.state.endDate).getTime()) {\n                        this.newToast(\"A data final precisa ser maior que a data inicial.\")\n                        this.setState({\n                            permissionSubit:false\n                        })\n                    }\n                }\n            } else {\n                this.setState({\n                    permissionSubit:true\n                })\n            }\n            if (this.state.permissionSubit) {\n                    let task = {\n                        id_task:this.state.id,\n                        name:this.state.name,\n                        description:this.state.description,\n                        isInfinite:this.state.isInfinite,\n                        endDate:this.state.startDate,\n                        startDate:this.state.endDate\n                                        \n                    }\n                    console.log(`${baseUrlBackend}/update-task`)\n                    axios.post(`${baseUrlBackend}/update-task`,task).then(resp =>{\n                        localStorage.setItem('SessionToken', resp.data.token)\n                        this.newToast(\"Tarefa atualizada com sucesso!\")\n                        window.location.href = \"/home\"\n                    }).catch(err => {\n                        console.log(err.response.status)\n                        switch(err.response.status){\n                            case 409: \n                            this.newToast(\"Tarefa não encontrada!\");\n                            break\n                            default:  \n                            this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                        }\n                    })\n            } \n        } else {\n            if (!this.state.name) {\n                this.newToast(\"Preencha o nome da tarefa.\")\n            }else{\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            isInfinite:true\n        })\n    }\n\n    handleToggleCheck() {\n       this.setState({\n           isInfinite:!this.state.isInfinite\n       })\n    }\n\n    handleTaskNameChange(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleTaskDescriptionChange(event) {\n        this.setState({description: event.target.value});\n    }\n\n    handleStartDateChange(event) {\n        this.setState({startDate: event.target.value});\n    }\n    handleEndDateChange(event) {\n        this.setState({endDate: event.target.value});\n    }\n\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    newToast = (message) => {\n        this.setState({toastMessage:message}, () => {\n            this.child.current.show()\n        })\n        \n    }\n\n    formInterval() {\n        const { formRegister, startDate, endDate } = this.state\n            return  (<div>\n            <div className=\"form-control\">\n            <label>{formRegister.interval.startDate.label}</label>\n                    <input type=\"datetime-local\" onChange={this.handleStartDateChange} name={formRegister.interval.startDate.inputName} id={formRegister.interval.startDate.inputName} value={startDate} min=\"2018-06-07T00:00\" max=\"2018-06-14T00:00\" />\n            </div>\n            <div className=\"form-control\">\n            <label>{formRegister.interval.endDate.label}</label>\n                    <input type=\"datetime-local\" onChange={this.handleEndDateChange} name={formRegister.interval.endDate.inputName} id={formRegister.interval.endDate.inputName} value={endDate} />\n            </div>\n    </div>)\n  \n    }\n\n    render() {\n\n        const { formRegister, isInfinite, name, description } = this.state\n\n        const dateInterval = this.formInterval()\n\n        return (\n              \n            <Fragment>\n                <Main {...headerProps}>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                    <form>\n                        <div className=\"form-control\">\n                            <label>{formRegister.name.label}</label>\n                            <input id={formRegister.name.inputName} name={formRegister.name.inputName} onChange={this.handleTaskNameChange} type=\"text\" value={name} maxLength={formRegister.name.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.description.description}</label>\n                            <textarea name={formRegister.description.inputName} onChange={this.handleTaskDescriptionChange} id={formRegister.description.inputName} rows=\"20\" cols=\"50\" maxlength={formRegister.description.maxLength}>{description}</textarea>\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.infinite.label}</label>\n                            <input onChange={this.handleToggleCheck} value={isInfinite} id={formRegister.infinite.inputName} name={formRegister.infinite.inputName} type=\"checkbox\" />\n                        </div>\n                         {isInfinite && dateInterval}\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <button onClick={e=>this.handleSubmit(e)}>{formRegister.submitButton}</button>\n                        </div>\n                    </form>\n                </Main>\n            </Fragment>\n        )\n    }\n\n}"]},"metadata":{},"sourceType":"module"}