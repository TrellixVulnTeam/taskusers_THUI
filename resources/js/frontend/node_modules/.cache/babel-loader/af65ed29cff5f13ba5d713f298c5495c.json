{"ast":null,"code":"import _objectSpread from\"/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useParams}from'react';import{Switch,Route,Redirect}from'react-router';import Home from'../components/home/Home';// import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\nimport WithAuth from'../components/utils/WithAuth';import UserRegister from'../components/registers/UserRegister';import ListUsers from'../components/lists/ListUsers';import TaskRegister from'../components/registers/TaskRegister';import ListTasks from'../components/lists/ListTasks';import EditTask from'../components/edit/EditTask';import ShowTask from'../components/display/ShowTask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default(function(props){var commomProps=props;// let ProtectedTestsPage = WithAuth(CrudTests)\nvar loginProps={input1_placeholder:'Digite seu usuário',input2_placeholder:'Digite sua senha',input1_label:'Usuário: ',input2_label:'Senha: ',//Label of this form\ninput1_textHelper:'Preencha o usuário corretamente.',//Default text message\ninput2_textHelper:'Preencha a senha corretamente.',input1_validation:[{validationType:\"password\",textWhenInvalid:\"Digite uma senha válida\"},{validationType:\"length\",args:{min:4,max:10},textWhenInvalid:\"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"}],input2_validation:[{validationType:\"length\",textWhenInvalid:\"Sua senha deve ter pelo menos 8 caracteres.\",args:{min:8,max:150}}]};var openEditTask=function openEditTask(commomProps){commomProps.id=commomProps.match.params.id;return/*#__PURE__*/_jsx(EditTask,_objectSpread({},commomProps));};//Outras formas de fazer o link\n//<Route exact path='/' component={Home}/>\n//<Route path='/users' render={props => <UserCrud {...myProps} />}/>\nvar apiRegex=/^\\/backend\\/.*/;// if using \"/api/\" in the pathname, don't use React Router\nif(apiRegex.test(window.location.pathname)){return/*#__PURE__*/_jsx(\"div\",{});// must return at least an empty div\n}else{return/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"/login\",render:function render(props){return/*#__PURE__*/_jsx(Home,_objectSpread({},loginProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/logout\",render:function render(props){return/*#__PURE__*/_jsx(Home,_objectSpread({},loginProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/cadastrar-usuario\",render:function render(props){return/*#__PURE__*/_jsx(UserRegister,_objectSpread({},commomProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/listar-usuarios\",render:function render(props){return/*#__PURE__*/_jsx(ListUsers,_objectSpread({},commomProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/cadastrar-tarefas\",render:function render(props){return/*#__PURE__*/_jsx(TaskRegister,_objectSpread({},commomProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/listar-tarefas\",render:function render(props){return/*#__PURE__*/_jsx(ListTasks,_objectSpread({},commomProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/cadastrar-tarefa\",render:function render(props){return/*#__PURE__*/_jsx(TaskRegister,_objectSpread({},commomProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/:id/ver-tarefa\",render:function render(props){return/*#__PURE__*/_jsx(ShowTask,_objectSpread({},commomProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/:id/editar-tarefa\",render:function render(props){return openEditTask(commomProps);}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/\",render:function render(props){return/*#__PURE__*/_jsx(Home,_objectSpread({},loginProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/home\",render:function render(props){return/*#__PURE__*/_jsx(Home,_objectSpread({},loginProps));}}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"/backend\",render:function render(props){return/*#__PURE__*/_jsx(Home,_objectSpread({},loginProps));}}),/*#__PURE__*/_jsx(Redirect,{from:\"*\",to:\"/\"})]});}});///  <Route path='/users' component={UserCrud}/>","map":{"version":3,"sources":["/home/ivanferrer/projetos/taskusers/resources/js/frontend/task-users/src/maintasks/Routes.jsx"],"names":["React","useParams","Switch","Route","Redirect","Home","WithAuth","UserRegister","ListUsers","TaskRegister","ListTasks","EditTask","ShowTask","props","commomProps","loginProps","input1_placeholder","input2_placeholder","input1_label","input2_label","input1_textHelper","input2_textHelper","input1_validation","validationType","textWhenInvalid","args","min","max","input2_validation","openEditTask","id","match","params","apiRegex","test","window","location","pathname"],"mappings":"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","sourcesContent":["import React, {useParams} from 'react'\nimport {Switch, Route, Redirect} from 'react-router'\n\nimport Home from '../components/home/Home'\n// import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\nimport WithAuth from '../components/utils/WithAuth'\nimport UserRegister from '../components/registers/UserRegister'\nimport ListUsers from '../components/lists/ListUsers'\nimport TaskRegister from '../components/registers/TaskRegister'\nimport ListTasks from '../components/lists/ListTasks'\nimport EditTask from '../components/edit/EditTask'\nimport ShowTask from '../components/display/ShowTask'\n\n\nexport default props => {\n    let commomProps = props\n    // let ProtectedTestsPage = WithAuth(CrudTests)\n\n    const loginProps = {\n        input1_placeholder:'Digite seu usuário',\n        input2_placeholder:'Digite sua senha',\n        input1_label:'Usuário: ',  \n        input2_label:'Senha: ',                              //Label of this form\n        input1_textHelper:'Preencha o usuário corretamente.',        //Default text message\n        input2_textHelper: 'Preencha a senha corretamente.',     \n        input1_validation: [{\n                 validationType:\"password\",\n                 textWhenInvalid:\"Digite uma senha válida\"},\n             {\n             validationType:\"length\",\n             args:{ min:4, max: 10 },\n             textWhenInvalid:\"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"}\n         ],\n        input2_validation: [{\n                     validationType:\"length\",\n                     textWhenInvalid:\"Sua senha deve ter pelo menos 8 caracteres.\",\n                     args:{ min:8, max: 150 }\n        }]\n                 \n     }\n\n     const openEditTask = (commomProps) => {\n        commomProps.id = commomProps.match.params.id\n        return (<EditTask {...commomProps} />)\n    }\n\n    //Outras formas de fazer o link\n    //<Route exact path='/' component={Home}/>\n    //<Route path='/users' render={props => <UserCrud {...myProps} />}/>\n    const apiRegex = /^\\/backend\\/.*/\n    // if using \"/api/\" in the pathname, don't use React Router\n    if (apiRegex.test(window.location.pathname)) {\n       return <div /> // must return at least an empty div\n    } else {\n\n        return(\n        <Switch>\n            {/* <Route path='/home' render={props => <Home {...myProps} />}/> */}\n\n            \n            {/* <Route\n                path='/users'\n                render={\n                    (props) =>  <ProtectedTestsPage {...myProps}/>\n                }\n            /> */}\n\n        <Route exact path='/login' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/logout' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/cadastrar-usuario' render={props => <UserRegister {...commomProps} />}/>\n        <Route exact path='/listar-usuarios' render={props => <ListUsers {...commomProps} />}/>\n        <Route exact path='/cadastrar-tarefas' render={props => <TaskRegister {...commomProps} />}/>\n        <Route exact path='/listar-tarefas' render={props => <ListTasks {...commomProps} />}/>\n        <Route exact path='/cadastrar-tarefa' render={props => <TaskRegister {...commomProps} />}/>\n        <Route exact path='/:id/ver-tarefa' render={props => <ShowTask {...commomProps} />}/>\n        <Route exact path='/:id/editar-tarefa' render={props => openEditTask(commomProps)}/>\n        \n        \n\n            <Route exact path='/' render={props => <Home {...loginProps} />}/>\n            <Route exact path='/home' render={props => <Home {...loginProps} />}/>\n            <Route exact path='/backend' render={props => <Home {...loginProps} />}/>\n            {/* <Route path='/register' render={props => <Register {...myProps} />}/> */}\n            <Redirect from='*' to='/'/>\n        </Switch>\n        )\n    }\n    \n\n    \n}\n\n\n///  <Route path='/users' component={UserCrud}/>"]},"metadata":{},"sourceType":"module"}