{"ast":null,"code":"var _jsxFileName = \"/home/ivanferrer/projetos/task-users/frontend/task-users/src/maintasks/Routes.jsx\";\nimport React, { useParams } from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\nimport Home from '../components/home/Home'; // import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\n\nimport WithAuth from '../components/utils/WithAuth';\nimport UserRegister from '../components/registers/UserRegister';\nimport ListUsers from '../components/lists/ListUsers';\nimport TaskRegister from '../components/registers/TaskRegister';\nimport ListTasks from '../components/lists/ListTasks';\nimport EditTask from '../components/edit/EditTask';\nimport ShowTask from '../components/display/ShowTask';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default (props => {\n  var _s = $RefreshSig$();\n\n  let commomProps = props; // let ProtectedTestsPage = WithAuth(CrudTests)\n\n  const loginProps = {\n    input1_placeholder: 'Digite seu usuário',\n    input2_placeholder: 'Digite sua senha',\n    input1_label: 'Usuário: ',\n    input2_label: 'Senha: ',\n    //Label of this form\n    input1_textHelper: 'Preencha o usuário corretamente.',\n    //Default text message\n    input2_textHelper: 'Preencha a senha corretamente.',\n    input1_validation: [{\n      validationType: \"password\",\n      textWhenInvalid: \"Digite uma senha válida\"\n    }, {\n      validationType: \"length\",\n      args: {\n        min: 4,\n        max: 10\n      },\n      textWhenInvalid: \"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"\n    }],\n    input2_validation: [{\n      validationType: \"length\",\n      textWhenInvalid: \"Sua senha deve ter pelo menos 8 caracteres.\",\n      args: {\n        min: 8,\n        max: 150\n      }\n    }]\n  };\n\n  const openEditTask = commomProps => {\n    _s();\n\n    let {\n      id\n    } = useParams();\n    commomProps.id = id;\n    return /*#__PURE__*/_jsxDEV(EditTask, { ...commomProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this);\n  }; //Outras formas de fazer o link\n  //<Route exact path='/' component={Home}/>\n  //<Route path='/users' render={props => <UserCrud {...myProps} />}/>\n\n\n  _s(openEditTask, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n    return [useParams];\n  });\n\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => /*#__PURE__*/_jsxDEV(Home, { ...loginProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/logout\",\n      render: props => /*#__PURE__*/_jsxDEV(Home, { ...loginProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/cadastrar-usuario\",\n      render: props => /*#__PURE__*/_jsxDEV(UserRegister, { ...commomProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/listar-usuarios\",\n      render: props => /*#__PURE__*/_jsxDEV(ListUsers, { ...commomProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/cadastrar-tarefas\",\n      render: props => /*#__PURE__*/_jsxDEV(TaskRegister, { ...commomProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 64\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/listar-tarefas\",\n      render: props => /*#__PURE__*/_jsxDEV(ListTasks, { ...commomProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/cadastrar-tarefa\",\n      render: props => /*#__PURE__*/_jsxDEV(TaskRegister, { ...commomProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/:id/ver-tarefa\",\n      render: props => /*#__PURE__*/_jsxDEV(ShowTask, { ...commomProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 61\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/:id/editar-tarefa\",\n      children: openEditTask(commomProps)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/_jsxDEV(Home, { ...loginProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 48\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/home\",\n      render: props => /*#__PURE__*/_jsxDEV(Home, { ...loginProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 52\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n      from: \"*\",\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}); ///  <Route path='/users' component={UserCrud}/>","map":{"version":3,"sources":["/home/ivanferrer/projetos/task-users/frontend/task-users/src/maintasks/Routes.jsx"],"names":["React","useParams","Switch","Route","Redirect","Home","WithAuth","UserRegister","ListUsers","TaskRegister","ListTasks","EditTask","ShowTask","props","commomProps","loginProps","input1_placeholder","input2_placeholder","input1_label","input2_label","input1_textHelper","input2_textHelper","input1_validation","validationType","textWhenInvalid","args","min","max","input2_validation","openEditTask","id"],"mappings":"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","sourcesContent":["import React, {useParams} from 'react'\nimport {Switch, Route, Redirect} from 'react-router'\n\nimport Home from '../components/home/Home'\n// import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\nimport WithAuth from '../components/utils/WithAuth'\nimport UserRegister from '../components/registers/UserRegister'\nimport ListUsers from '../components/lists/ListUsers'\nimport TaskRegister from '../components/registers/TaskRegister'\nimport ListTasks from '../components/lists/ListTasks'\nimport EditTask from '../components/edit/EditTask'\nimport ShowTask from '../components/display/ShowTask'\n\n\nexport default props => {\n    let commomProps = props\n    // let ProtectedTestsPage = WithAuth(CrudTests)\n\n    const loginProps = {\n        input1_placeholder:'Digite seu usuário',\n        input2_placeholder:'Digite sua senha',\n        input1_label:'Usuário: ',  \n        input2_label:'Senha: ',                              //Label of this form\n        input1_textHelper:'Preencha o usuário corretamente.',        //Default text message\n        input2_textHelper: 'Preencha a senha corretamente.',     \n        input1_validation: [{\n                 validationType:\"password\",\n                 textWhenInvalid:\"Digite uma senha válida\"},\n             {\n             validationType:\"length\",\n             args:{ min:4, max: 10 },\n             textWhenInvalid:\"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"}\n         ],\n        input2_validation: [{\n                     validationType:\"length\",\n                     textWhenInvalid:\"Sua senha deve ter pelo menos 8 caracteres.\",\n                     args:{ min:8, max: 150 }\n        }]\n                 \n     }\n\n     const openEditTask = (commomProps) => {\n        let { id } = useParams()\n        commomProps.id = id\n        return (<EditTask {...commomProps} />)\n    }\n\n    //Outras formas de fazer o link\n    //<Route exact path='/' component={Home}/>\n    //<Route path='/users' render={props => <UserCrud {...myProps} />}/>\n    return(\n    <Switch>\n        {/* <Route path='/home' render={props => <Home {...myProps} />}/> */}\n\n        \n        {/* <Route\n            path='/users'\n            render={\n                (props) =>  <ProtectedTestsPage {...myProps}/>\n            }\n        /> */}\n\n       <Route exact path='/login' render={props => <Home {...loginProps} />}/>\n       <Route exact path='/logout' render={props => <Home {...loginProps} />}/>\n       <Route exact path='/cadastrar-usuario' render={props => <UserRegister {...commomProps} />}/>\n       <Route exact path='/listar-usuarios' render={props => <ListUsers {...commomProps} />}/>\n       <Route exact path='/cadastrar-tarefas' render={props => <TaskRegister {...commomProps} />}/>\n       <Route exact path='/listar-tarefas' render={props => <ListTasks {...commomProps} />}/>\n       <Route exact path='/cadastrar-tarefa' render={props => <TaskRegister {...commomProps} />}/>\n       <Route exact path='/:id/ver-tarefa' render={props => <ShowTask {...commomProps} />}/>\n       <Route exact path='/:id/editar-tarefa' children={openEditTask(commomProps)}/>\n       \n     \n\n        <Route exact path='/' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/home' render={props => <Home {...loginProps} />}/>\n        {/* <Route path='/register' render={props => <Register {...myProps} />}/> */}\n        <Redirect from='*' to='/'/>\n    </Switch>\n    )\n    \n\n    \n}\n\n\n///  <Route path='/users' component={UserCrud}/>"]},"metadata":{},"sourceType":"module"}