{"ast":null,"code":"var _jsxFileName = \"/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/utils/WithAuth.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false\n      };\n    }\n\n    componentDidMount() {\n      let token = localStorage.getItem('SessionToken');\n      var headers = {\n        'Authorization': `bearer ${token}`\n      };\n      axios.post('http://local.tasks.com.br/auth', '', {\n        headers: headers\n      }).then(resp => {\n        //pass token as header\n        this.setState({\n          loading: false\n        });\n      }).catch(err => {\n        console.error(err);\n        this.setState({\n          loading: false,\n          redirect: true\n        });\n      });\n    }\n\n    render() {\n      const {\n        loading,\n        redirect\n      } = this.state;\n\n      if (loading) {\n        return null;\n      }\n\n      if (redirect) {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 16\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: /*#__PURE__*/_jsxDEV(ComponentToProtect, { ...this.props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    }\n\n  };\n}","map":{"version":3,"sources":["/home/ivanferrer/projetos/task-users/frontend/task-users/src/components/utils/WithAuth.jsx"],"names":["React","Component","Redirect","axios","withAuth","ComponentToProtect","constructor","state","loading","redirect","componentDidMount","token","localStorage","getItem","headers","post","then","resp","setState","catch","err","console","error","render","props"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AACA,eAAe,SAASC,QAAT,CAAkBC,kBAAlB,EAAsC;AACnD,SAAO,cAAcJ,SAAd,CAAwB;AAC7BK,IAAAA,WAAW,GAAG;AACZ;AACA,WAAKC,KAAL,GAAa;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,QAAQ,EAAE;AAFC,OAAb;AAID;;AACDC,IAAAA,iBAAiB,GAAG;AAChB,UAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAZ;AACA,UAAIC,OAAO,GAAG;AACV,yBAAkB,UAASH,KAAM;AADvB,OAAd;AAGAR,MAAAA,KAAK,CAACY,IAAN,CAAW,gCAAX,EAA4C,EAA5C,EAAgD;AAACD,QAAAA,OAAO,EAAEA;AAAV,OAAhD,EAAqEE,IAArE,CAA0EC,IAAI,IAAI;AAAC;AAC/E,aAAKC,QAAL,CAAe;AAAEV,UAAAA,OAAO,EAAE;AAAX,SAAf;AACH,OAFD,EAEGW,KAFH,CAESC,GAAG,IAAI;AACZC,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACF,aAAKF,QAAL,CAAc;AAAEV,UAAAA,OAAO,EAAE,KAAX;AAAkBC,UAAAA,QAAQ,EAAE;AAA5B,SAAd;AACD,OALD;AAMH;;AACDc,IAAAA,MAAM,GAAG;AACP,YAAM;AAAEf,QAAAA,OAAF;AAAWC,QAAAA;AAAX,UAAwB,KAAKF,KAAnC;;AACA,UAAIC,OAAJ,EAAa;AACX,eAAO,IAAP;AACD;;AACD,UAAIC,QAAJ,EAAc;AACZ,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;;AACD,0BACE,QAAC,KAAD,CAAO,QAAP;AAAA,+BACE,QAAC,kBAAD,OAAwB,KAAKe;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AAjC4B,GAA/B;AAmCD","sourcesContent":["import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'\nexport default function withAuth(ComponentToProtect) {\n  return class extends Component {\n    constructor() {\n      super();\n      this.state = {\n        loading: true,\n        redirect: false,\n      };\n    }\n    componentDidMount() {\n        let token = localStorage.getItem('SessionToken')\n        var headers = {\n            'Authorization': `bearer ${token}`\n        }\n        axios.post('http://local.tasks.com.br/auth','', {headers: headers} ).then(resp => {//pass token as header\n            this.setState( { loading: false } )\n        }).catch(err => {\n            console.error(err);\n          this.setState({ loading: false, redirect: true });\n        })\n    }\n    render() {\n      const { loading, redirect } = this.state;\n      if (loading) {\n        return null;\n      }\n      if (redirect) {\n        return <Redirect to=\"/\" />;\n      }\n      return (\n        <React.Fragment>\n          <ComponentToProtect {...this.props} />\n        </React.Fragment>\n      );\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}