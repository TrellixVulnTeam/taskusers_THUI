{"ast":null,"code":"var _jsxFileName = \"/home/ivanferrer/projetos/taskusers/resources/js/frontend/src/maintasks/Routes.jsx\";\nimport React, { useParams } from 'react';\nimport { Switch, Route, Redirect } from 'react-router';\nimport Home from '../components/home/Home'; // import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\n\nimport WithAuth from '../components/utils/WithAuth';\nimport UserRegister from '../components/registers/UserRegister';\nimport ListUsers from '../components/lists/ListUsers';\nimport TaskRegister from '../components/registers/TaskRegister';\nimport ListTasks from '../components/lists/ListTasks';\nimport EditTask from '../components/edit/EditTask';\nimport ShowTask from '../components/display/ShowTask';\nexport default (props => {\n  let commomProps = props; // let ProtectedTestsPage = WithAuth(CrudTests)\n\n  console.log(commomProps);\n  const loginProps = {\n    input1_placeholder: 'Digite seu usuário',\n    input2_placeholder: 'Digite sua senha',\n    input1_label: 'Usuário: ',\n    input2_label: 'Senha: ',\n    //Label of this form\n    input1_textHelper: 'Preencha o usuário corretamente.',\n    //Default text message\n    input2_textHelper: 'Preencha a senha corretamente.',\n    input1_validation: [{\n      validationType: \"password\",\n      textWhenInvalid: \"Digite uma senha válida\"\n    }, {\n      validationType: \"length\",\n      args: {\n        min: 4,\n        max: 10\n      },\n      textWhenInvalid: \"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"\n    }],\n    input2_validation: [{\n      validationType: \"length\",\n      textWhenInvalid: \"Sua senha deve ter pelo menos 8 caracteres.\",\n      args: {\n        min: 8,\n        max: 150\n      }\n    }]\n  };\n\n  const openEditTask = commomProps => {\n    commomProps.id = commomProps.match.params.id;\n    return /*#__PURE__*/React.createElement(EditTask, Object.assign({}, commomProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }\n    }));\n  }; //Outras formas de fazer o link\n  //<Route exact path='/' component={Home}/>\n  //<Route path='/users' render={props => <UserCrud {...myProps} />}/>\n\n\n  const apiRegex = /^\\/backend\\/.*/; // if using \"/api/\" in the pathname, don't use React Router\n\n  if (apiRegex.test(window.location.pathname)) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }); // must return at least an empty div\n  } else {\n    return /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, loginProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 53\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/logout\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, loginProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 54\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cadastrar-usuario\",\n      render: props => /*#__PURE__*/React.createElement(UserRegister, Object.assign({}, commomProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/listar-usuarios\",\n      render: props => /*#__PURE__*/React.createElement(ListUsers, Object.assign({}, commomProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 63\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cadastrar-tarefas\",\n      render: props => /*#__PURE__*/React.createElement(TaskRegister, Object.assign({}, commomProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 65\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/listar-tarefas\",\n      render: props => /*#__PURE__*/React.createElement(ListTasks, Object.assign({}, commomProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/cadastrar-tarefa\",\n      render: props => /*#__PURE__*/React.createElement(TaskRegister, Object.assign({}, commomProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 64\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/:id/ver-tarefa\",\n      render: props => /*#__PURE__*/React.createElement(ShowTask, Object.assign({}, commomProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 62\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/:id/editar-tarefa\",\n      render: props => openEditTask(commomProps),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, loginProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 52\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/home\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, loginProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 56\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/backend\",\n      render: props => /*#__PURE__*/React.createElement(Home, Object.assign({}, loginProps, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 59\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Redirect, {\n      from: \"*\",\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }));\n  }\n}); ///  <Route path='/users' component={UserCrud}/>","map":{"version":3,"sources":["/home/ivanferrer/projetos/taskusers/resources/js/frontend/src/maintasks/Routes.jsx"],"names":["React","useParams","Switch","Route","Redirect","Home","WithAuth","UserRegister","ListUsers","TaskRegister","ListTasks","EditTask","ShowTask","props","commomProps","console","log","loginProps","input1_placeholder","input2_placeholder","input1_label","input2_label","input1_textHelper","input2_textHelper","input1_validation","validationType","textWhenInvalid","args","min","max","input2_validation","openEditTask","id","match","params","apiRegex","test","window","location","pathname"],"mappings":"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","sourcesContent":["import React, {useParams} from 'react'\nimport {Switch, Route, Redirect} from 'react-router'\n\nimport Home from '../components/home/Home'\n// import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\nimport WithAuth from '../components/utils/WithAuth'\nimport UserRegister from '../components/registers/UserRegister'\nimport ListUsers from '../components/lists/ListUsers'\nimport TaskRegister from '../components/registers/TaskRegister'\nimport ListTasks from '../components/lists/ListTasks'\nimport EditTask from '../components/edit/EditTask'\nimport ShowTask from '../components/display/ShowTask'\n\n\nexport default props => {\n    let commomProps = props\n    // let ProtectedTestsPage = WithAuth(CrudTests)\n    console.log(commomProps)\n\n    const loginProps = {\n        input1_placeholder:'Digite seu usuário',\n        input2_placeholder:'Digite sua senha',\n        input1_label:'Usuário: ',  \n        input2_label:'Senha: ',                              //Label of this form\n        input1_textHelper:'Preencha o usuário corretamente.',        //Default text message\n        input2_textHelper: 'Preencha a senha corretamente.',     \n        input1_validation: [{\n                 validationType:\"password\",\n                 textWhenInvalid:\"Digite uma senha válida\"},\n             {\n             validationType:\"length\",\n             args:{ min:4, max: 10 },\n             textWhenInvalid:\"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"}\n         ],\n        input2_validation: [{\n                     validationType:\"length\",\n                     textWhenInvalid:\"Sua senha deve ter pelo menos 8 caracteres.\",\n                     args:{ min:8, max: 150 }\n        }]\n                 \n     }\n\n     const openEditTask = (commomProps) => {\n        commomProps.id = commomProps.match.params.id\n        return (<EditTask {...commomProps} />)\n    }\n\n    //Outras formas de fazer o link\n    //<Route exact path='/' component={Home}/>\n    //<Route path='/users' render={props => <UserCrud {...myProps} />}/>\n    const apiRegex = /^\\/backend\\/.*/\n    // if using \"/api/\" in the pathname, don't use React Router\n    if (apiRegex.test(window.location.pathname)) {\n       return <div /> // must return at least an empty div\n    } else {\n\n        return(\n        <Switch>\n            {/* <Route path='/home' render={props => <Home {...myProps} />}/> */}\n\n            \n            {/* <Route\n                path='/users'\n                render={\n                    (props) =>  <ProtectedTestsPage {...myProps}/>\n                }\n            /> */}\n\n        <Route exact path='/login' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/logout' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/cadastrar-usuario' render={props => <UserRegister {...commomProps} />}/>\n        <Route exact path='/listar-usuarios' render={props => <ListUsers {...commomProps} />}/>\n        <Route exact path='/cadastrar-tarefas' render={props => <TaskRegister {...commomProps} />}/>\n        <Route exact path='/listar-tarefas' render={props => <ListTasks {...commomProps} />}/>\n        <Route exact path='/cadastrar-tarefa' render={props => <TaskRegister {...commomProps} />}/>\n        <Route exact path='/:id/ver-tarefa' render={props => <ShowTask {...commomProps} />}/>\n        <Route exact path='/:id/editar-tarefa' render={props => openEditTask(commomProps)}/>\n        \n        \n\n            <Route exact path='/' render={props => <Home {...loginProps} />}/>\n            <Route exact path='/home' render={props => <Home {...loginProps} />}/>\n            <Route exact path='/backend' render={props => <Home {...loginProps} />}/>\n            {/* <Route path='/register' render={props => <Register {...myProps} />}/> */}\n            <Redirect from='*' to='/'/>\n        </Switch>\n        )\n    }\n    \n\n    \n}\n\n\n///  <Route path='/users' component={UserCrud}/>"]},"metadata":{},"sourceType":"module"}