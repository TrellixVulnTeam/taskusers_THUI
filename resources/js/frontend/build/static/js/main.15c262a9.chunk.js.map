{"version":3,"sources":["components/templates/Options.jsx","components/home/Home.jsx","components/templates/Header.jsx","components/templates/Main.jsx","components/utils/Toast.jsx","config/baseUrl.jsx","components/registers/UserRegister.jsx","components/lists/ListUsers.jsx","components/registers/TaskRegister.jsx","components/lists/ListTasks.jsx","components/edit/EditTask.jsx","maintasks/Routes.jsx","components/templates/Logo.jsx","assets/imgs/logo.png","components/templates/Footer.jsx","components/templates/Nav.jsx","components/templates/Overlay.jsx","maintasks/TaskApp.jsx","reportWebVitals.js","index.js"],"names":["props","className","to","icon","title","subtitle","children","Toast","state","show","toast","message","this","setState","setTimeout","time","Component","baseUrl","baseUrlBackend","headerProps","UserRegister","newToast","toastMessage","child","current","createRef","name","username","password","repeat_password","errorForm","formRegister","label","inputName","maxLength","submitButton","handleNameChange","bind","handleUsernameChange","handlePasswordChange","handleRepeatPasswordChange","validate","errors","push","length","e","preventDefault","isValidUser","user","is_active","console","log","axios","post","then","response","window","location","href","catch","err","status","map","error","event","target","value","messError","messageError","ref","onChange","id","type","onClick","handleSubmit","ListUsers","list","userList","useState","listUser","currentDate","Date","TaskRegister","description","startDate","formmatedCurrentDate","endDate","addDays","isInfinite","infinite","interval","permissionSubit","handleToggleCheck","handleTaskNameChange","handleTaskDescriptionChange","handleStartDateChange","handleEndDateChange","theDate","dateTime","getTime","getTimezoneOffset","toISOString","substring","task","is_Infinite","end_date","start_date","localStorage","setItem","data","token","date","days","result","setDate","getDate","min","max","dateInterval","formInterval","rows","cols","maxlength","ListTasks","taskLists","listTasks","EditTask","id_task","resp","commomProps","loginProps","input1_placeholder","input2_placeholder","input1_label","input2_label","input1_textHelper","input2_textHelper","input1_validation","validationType","textWhenInvalid","args","input2_validation","test","pathname","exact","path","render","Home","match","params","openEditTask","from","authenticated","Overlay","connection","connectionDescription","TaskApp","isFinite","listUsers","headers","all","Routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15c262a9.chunk.js","sourcesContent":["import './Options.scss'\nimport React, {Fragment} from 'react'\nimport { Link } from 'react-router-dom'\n\nexport default props => {\n   \n   return (\n         <aside className=\"menu-options\">\n                <nav className=\"menu\">\n                    <Link to=\"/\">\n                        <i className=\"fa fa-home\"></i> Início\n                    </Link>\n                    <Link to=\"/cadastrar-usuario\">\n                        <i className=\"fa fa-plus-square\"></i> Cadastrar usuário\n                    </Link>\n                    <Link to=\"/listar-usuarios\">\n                        <i className=\"fa fa-users\"></i> Usuários\n                    </Link>\n                    <Link to=\"/cadastrar-tarefa\">\n                        <i className=\"fa fa-plus-square\"></i> Cadastrar tarefa\n                    </Link>\n                    <Link to=\"/listar-tarefas\">\n                        <i className=\"fa fa-tasks\"></i> Tarefas\n                    </Link>\n                </nav>\n        </aside>\n   )\n \n}","import React from 'react'\n// import Main from '../templates/Main'\nimport Options from '../templates/Options'\n\nexport default props => {\n\n    //if(props.connection !== \"Connected\") props.setConnection(\"Connected\", \"not required\")\n   \n    return(\n        <Options {...props}  />\n    )\n    \n}","import './Header.scss'\nimport React from 'react'\n\nexport default props =>\n    <header className=\"header d-none d-sm-flex flex-column\">\n        <h1 className=\"mt-3\">\n            <i className={`fa fa-${props.icon}`}></i> {props.title}\n        </h1>\n    <p className=\"lead text-muted\">{props.subtitle}</p>\n    </header>\n","import './Main.scss'\nimport React, {Fragment} from 'react'\nimport Header from './Header'\n\nexport default props => {\n    return(\n    <Fragment>\n        <Header {...props}/>\n        <main className=\"content container-fluid\">\n            <div className=\"p-5 mt-4\">\n                {props.children}\n            </div>\n        </main>\n    </Fragment>\n    )\n}","import React, {Component} from 'react'\nimport './Toast.scss'\n\nexport default class Toast extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            show:this.props.toast,\n            message:this.props.message\n        }\n    }\n\n    \n    show(){       \n        this.setState({show:true})\n        setTimeout(() => {\n            this.setState({show:false})\n        }, this.props.time)\n    }\n    \n  \n    \n    render(){\n        return(\n            <div className={`toast ${this.state.show ? \"show\":\"\"}`}>{this.props.message}</div>\n        )\n    }\n}","const baseUrl = {\n    \"baseUrlBackend\":\"http://127.0.0.1:8000/api\"\n}\nexport default baseUrl","import './UserRegister.scss'\nimport React, {Component, Fragment, createRef} from 'react'\nimport Main from '../templates/Main'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nconst headerProps = {\n    icon: 'user',\n    title: 'Registro de Usuário',\n    subtitle: 'Preencha o formulário abaixo para cadastrar um usuário.',\n}\n\nexport default class UserRegister extends Component {\n    constructor(props) {\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            name: props.name || '',\n            username: props.username || '',\n            password: props.password || '',\n            repeat_password:'',\n            toastMessage:'false',\n            errorForm:[],\n            formRegister:{\n                name:{\n                    label:\"Nome:\",\n                    inputName:\"name\",\n                    maxLength:85\n                },\n                username:{\n                    label:\"Usuário:\",\n                    inputName:\"username\",\n                    maxLength:20\n                },\n                password:{\n                    label:\"Senha:\",\n                    inputName:\"password\",\n                    maxLength:150\n                },\n                repeat_password:{\n                    label:\"Repita a senha:\",\n                    inputName:\"repeat_password\",\n                    maxLength:150\n                },\n                submitButton:\"Cadastrar\"\n\n            }\n        }\n        this.handleNameChange = this.handleNameChange.bind(this)\n        this.handleUsernameChange = this.handleUsernameChange.bind(this)\n        this.handlePasswordChange = this.handlePasswordChange.bind(this)\n        this.handleRepeatPasswordChange = this.handleRepeatPasswordChange.bind(this)\n\n    }\n\n    isValidUser() {\n        const {name, username, password, repeat_password} = this.state\n\n        const validate = {\n            errors:[]\n        }\n\n        if (!name || name == '') {\n            validate.errors.push('O nome precisa ser preenchido.');\n        }\n        if (name && name != '') {\n            if(name.length < 3 || name.length > 85) {\n                validate.errors.push('O nome precisa ter de 3-85 caracteres.');\n            }\n        }\n        if (!username || username == '') {\n            validate.errors.push('O nome de usuário precisa ser preenchido.');\n        }\n        if (username && username != '') {\n            if (username.length < 4 || username.length > 20) {\n                validate.errors.push('O usuário precisa ter de 4-20 caracteres.');\n            }\n        }\n        if (!password || password == '') {\n            validate.errors.push('A senha precisa ser preenchida.');\n        }\n        if (!repeat_password || repeat_password == '') {\n            validate.errors.push('O campo repita a senha precisa ser preenchido.');\n        }\n        if (password && password != '') {\n            if (password.length < 8) {\n                validate.errors.push('A senha precisa ser ao menos 8 caracteres.');\n            }\n            if (password.length > 149) {\n                validate.errors.push('A senha precisa ser menor que 150 caracteres.');\n            }\n        }\n        if (repeat_password && repeat_password != '' && password && password != '') {\n            if (password !== repeat_password) {\n               validate.errors.push('As senhas digitadas precisam ser iguais');\n            }\n        }\n        if (validate.errors.length > 0) {\n            this.setState({errorForm:validate.errors})\n            return false\n        } else {\n            this.setState({errorForm:[]})\n            return true;\n        }\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if (this.isValidUser()) {\n\n            let user = {\n                name:this.state.name,\n                username:this.state.username,\n                password:this.state.password,\n                is_active:1\n            }\n            console.log(`${baseUrlBackend}/add/user`)\n            axios.post(`${baseUrlBackend}/add/user`, user)\n            .then(response => {\n                if(response) {\n                    console.log(response)\n                    this.newToast(\"Usuário cadastrado com sucesso!\")\n                    window.location.href = \"/listar-usuarios\"\n                }\n            }).catch(err => {\n                console.log(err.response.status)\n                switch(err.response.status){\n                    case 409: \n                        this.newToast(\"Usuário já possui cadastro!\");\n                    break\n                    default:  \n                          this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                }\n            })\n        } else {\n            if (!this.state.name && !this.state.username && !this.state.password && !this.state.repeat_password ) {\n                this.newToast(\"Todos os campos devem ser preenchidos.\")\n            } else {\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n\n    }\n\n    messageError() {\n       \n        const { errorForm } = this.state\n        if (errorForm.length > 0) {\n            console.log('entrei...')\n          return (<div className=\"errors\">\n                    {errorForm.map((error) => {\n                        <li key={error}>-{error}</li>\n                    })}\n                 </div>)\n        }\n    }\n\n    newToast = (message) => {\n        this.setState({toastMessage:message}, () => {\n            this.child.current.show()\n        })\n    }\n\n    handleNameChange(event) {\n        this.setState({\n            name:event.target.value\n        })\n    }\n\n    handleUsernameChange(event) {\n        this.setState({\n            username:event.target.value\n        })\n    }\n\n    handlePasswordChange(event) {\n        this.setState({\n            password:event.target.value\n        })\n    }\n\n    handleRepeatPasswordChange(event) {\n        this.setState({\n            repeat_password:event.target.value\n        })\n    }\n\n    render() {\n\n        const { formRegister, name, username, password, repeat_password } = this.state\n\n        const messError = this.messageError()\n\n        return (\n              \n            <Fragment>\n                <Main {...headerProps}>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                    <form>\n                        {messError}\n                        <div className=\"form-control\">\n                            <label>{formRegister.name.label}</label>\n                            <input onChange={this.handleNameChange} id={formRegister.name.inputName} name={formRegister.name.inputName} type=\"text\" value={name} maxLength={formRegister.name.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.username.label}</label>\n                            <input onChange={this.handleUsernameChange} id={formRegister.username.inputName} name={formRegister.username.inputName} type=\"text\" value={username} maxLength={formRegister.username.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.password.label}</label>\n                            <input onChange={this.handlePasswordChange} id={formRegister.password.inputName} name={formRegister.password.inputName} type=\"password\" value={password} maxLength={formRegister.password.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.repeat_password.label}</label>\n                            <input onChange={this.handleRepeatPasswordChange} id={formRegister.repeat_password.inputName} name={formRegister.repeat_password.inputName} type=\"password\" value={repeat_password} maxLength={formRegister.repeat_password.maxLength} />\n                        </div>\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <button onClick={e=>this.handleSubmit(e)}>{formRegister.submitButton}</button>\n                        </div>\n                    </form>\n                </Main>\n            </Fragment>\n        )\n    }\n}","import './ListUsers.scss'\nimport React, {useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport Main from '../templates/Main'\n\nconst ListUsers = props => {\n\n    const list = props.userList || []\n\n    const headerProps = {\n        icon: 'users',\n        title: 'Usuários',\n        subtitle: 'Lista de usuários cadastrados.',\n    }\n      \n    const [ listUser ] = useState(list)\n  \n    if(listUser.length > 0) {\n        return (\n            <Main {...headerProps}>\n            <div className=\"content-list-users\">\n                <ul>\n                {listUser.map((user) => {\n                    return <li key={user.id}>{user.id} - <Link to={`/${user.id}/editar-usuario`}>Editar usuário</Link></li>;\n                })}\n                </ul>\n            </div>\n            </Main>\n        )\n    } else {\n        return (<Main {...headerProps}><div className=\"content-list-users\"><h3>Não há usuários para listar.</h3></div></Main>)\n    }\n \n}\nexport default ListUsers\n","import './TaskRegister.scss'\nimport React, {Component, Fragment, createRef} from 'react'\nimport Main from '../templates/Main'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nconst headerProps = {\n    icon: 'calendar-check-o',\n    title: 'Cadastro de Tarefa',\n    subtitle: 'Preencha o formulário abaixo com as informações da tarefa.',\n}\nconst currentDate = new Date()\n\nexport default class TaskRegister extends Component {\n    constructor(props) {\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            name: props.name || \"\",\n            description: props.description || \"\",\n            startDate: props.startDate || this.formmatedCurrentDate(),\n            endDate: props.endDate || this.formmatedCurrentDate(this.addDays(currentDate, 10)),\n            isInfinite: props.isInfinite || false,\n            toastMessage:\"false\",\n            formRegister:{\n                name:{\n                    label:\"Título da tarefa: \",\n                    inputName:\"task\",\n                    maxLength:45\n                },\n                description:{\n                    label:\"Descrição da tarefa: \",\n                    inputName:\"description\",\n                    maxLength:1000\n                },\n                infinite:{\n                    label: \"Infinito\",\n                    inputName:\"infinite\"\n                },\n                interval:{\n                    startDate:{\n                        label:\"Data inicial:\",\n                        inputName:\"start_date\"\n                    },\n                    endDate:{\n                        label: \"Data final:\",\n                        inputName: \"end_date\"\n                    }\n                },\n                permissionSubit:false,\n                submitButton:\"Cadastrar\"\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleToggleCheck = this.handleToggleCheck.bind(this)\n        this.handleTaskNameChange = this.handleTaskNameChange.bind(this)\n        this.handleTaskDescriptionChange = this.handleTaskDescriptionChange.bind(this)\n        this.handleStartDateChange = this.handleStartDateChange.bind(this)\n        this.handleEndDateChange = this.handleEndDateChange.bind(this)\n\n    }\n\n    formmatedCurrentDate(theDate) {\n        const dateTime = theDate || currentDate\n        return new Date(dateTime.getTime()-dateTime.getTimezoneOffset()*60000).toISOString().substring(0,19)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if(this.state.name && this.state.name !== '') {\n\n            this.setState({\n                permissionSubit:true\n            })\n\n            if(!this.state.isInfinite) {\n              \n                if(!this.state.startDate) {\n                    this.newToast(\"A data inicial precisa ser registrada.\")\n                    this.setState({\n                        permissionSubit:false\n                    })\n                }\n                if(!this.state.endDate) {\n                    this.newToast(\"A data final precisa ser registrada.\")\n                    this.setState({\n                        permissionSubit:false\n                    })\n                }\n                if(this.state.startDate && this.state.startDate) {\n                    if(new Date(this.state.startDate).getTime() > new Date(this.state.endDate).getTime()) {\n                        this.newToast(\"A data final precisa ser maior que a data inicial.\")\n                        this.setState({\n                            permissionSubit:false\n                        })\n                    }\n                }\n            } else {\n                this.setState({\n                    permissionSubit:true\n                })\n            }\n            if (this.state.permissionSubit) {\n                    let task = {\n                        name:this.state.name,\n                        description:this.state.description,\n                        is_Infinite:this.state.isInfinite,\n                        end_date:this.state.startDate,\n                        start_date:this.state.endDate\n                                        \n                    }\n                    console.log(`${baseUrlBackend}/add/task`)\n                    axios.post(`${baseUrlBackend}/add/task`,task).then(response =>{\n                        localStorage.setItem('SessionToken', response.data.token)\n                        this.newToast(\"Tarefa cadastrada com sucesso!\")\n                        window.location.href = \"/home\"\n                    }).catch(err => {\n                        console.log(err.response.status)\n                        switch(err.response.status){\n                            case 409: \n                            this.newToast(\"Tarefa já cadastrada!\");\n                            break\n                            default:  \n                            this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                        }\n                    })\n            } \n        } else {\n            if (!this.state.name) {\n                this.newToast(\"Preencha o nome da tarefa.\")\n            }else{\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            isInfinite:true\n        })\n    }\n\n    handleToggleCheck() {\n       this.setState({\n           isInfinite:!this.state.isInfinite\n       })\n    }\n\n    handleTaskNameChange(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleTaskDescriptionChange(event) {\n        this.setState({description: event.target.value});\n    }\n\n    handleStartDateChange(event) {\n        this.setState({startDate: event.target.value});\n    }\n    handleEndDateChange(event) {\n        this.setState({endDate: event.target.value});\n    }\n\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    newToast = (message) => {\n        this.setState({toastMessage:message}, () => {\n            this.child.current.show()\n        })\n        \n    }\n\n    formInterval() {\n        const { formRegister, startDate, endDate } = this.state\n            return  (<div>\n            <div className=\"form-control\">\n            <label>{formRegister.interval.startDate.label}</label>\n                    <input type=\"datetime-local\" onChange={this.handleStartDateChange} name={formRegister.interval.startDate.inputName} id={formRegister.interval.startDate.inputName} value={startDate} min=\"2018-06-07T00:00\" max=\"2018-06-14T00:00\" />\n            </div>\n            <div className=\"form-control\">\n            <label>{formRegister.interval.endDate.label}</label>\n                    <input type=\"datetime-local\" onChange={this.handleEndDateChange} name={formRegister.interval.endDate.inputName} id={formRegister.interval.endDate.inputName} value={endDate} />\n            </div>\n    </div>)\n  \n    }\n\n    render() {\n\n        const { formRegister, isInfinite, name, description } = this.state\n\n        const dateInterval = this.formInterval()\n\n        return (\n              \n            <Fragment>\n                <Main {...headerProps}>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                    <form>\n                        <div className=\"form-control\">\n                            <label>{formRegister.name.label}</label>\n                            <input id={formRegister.name.inputName} name={formRegister.name.inputName} onChange={this.handleTaskNameChange} type=\"text\" value={name} maxLength={formRegister.name.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.description.description}</label>\n                            <textarea name={formRegister.description.inputName} onChange={this.handleTaskDescriptionChange} id={formRegister.description.inputName} rows=\"20\" cols=\"50\" maxlength={formRegister.description.maxLength}>{description}</textarea>\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.infinite.label}</label>\n                            <input onChange={this.handleToggleCheck} value={isInfinite} id={formRegister.infinite.inputName} name={formRegister.infinite.inputName} type=\"checkbox\" />\n                        </div>\n                         {isInfinite && dateInterval}\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <button onClick={e=>this.handleSubmit(e)}>{formRegister.submitButton}</button>\n                        </div>\n                    </form>\n                </Main>\n            </Fragment>\n        )\n    }\n}","import './ListTasks.scss'\nimport React, {useState} from 'react'\nimport { Link } from 'react-router-dom'\nimport Main from '../templates/Main'\n\nconst ListTasks = props => {\n\n    const list = props.taskLists || []\n\n    const headerProps = {\n        icon: 'tasks',\n        title: 'Tarefas',\n        subtitle: 'Lista de tarefas cadastradas.',\n    }\n      \n    const [ listTasks ] = useState(list)\n\n    if(listTasks.length > 0) {\n        return (\n            <Main {...headerProps}>\n                <div className=\"content-list-tasks\">\n                    <ul>\n                        {listTasks.map((task) => {\n                        return <li key={task.id}>{task.id} - <Link to={`/${task.id}/ver-tarefa`}>{task.name}</Link> | <Link to={`/${task.id}/editar-tarefa`}>Editar tarefa</Link></li>;\n                    })}\n                    </ul>\n                </div>\n            </Main>\n        )\n    } else {\n        return (<Main  {...headerProps}><div className=\"content-list-users\"><h3>Não há tarefas para listar.</h3></div></Main>)\n    }\n \n}\nexport default ListTasks\n","import './EditTask.scss'\nimport React, {Component, Fragment, createRef} from 'react'\nimport Main from '../templates/Main'\nimport axios from 'axios'\nimport Toast from '../utils/Toast';\nimport baseUrl from '../../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nconst headerProps = {\n    icon: 'calendar-check-o',\n    title: 'Editar Tarefa',\n    subtitle: 'Preencha o formulário abaixo com as informações da tarefa.',\n}\nconst currentDate = new Date()\n\nexport default class EditTask extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.child = createRef()\n\n        this.state = {\n            id: props.id,\n            name: props.name || \"\",\n            description: props.description || \"\",\n            startDate: props.startDate || this.formmatedCurrentDate(),\n            endDate: props.endDate || this.formmatedCurrentDate(this.addDays(currentDate, 10)),\n            isInfinite: props.isInfinite || false,\n            toastMessage:\"false\",\n            formRegister:{\n                name:{\n                    label:\"Título da tarefa: \",\n                    inputName:\"task\",\n                    maxLength:45\n                },\n                description:{\n                    label:\"Descrição da tarefa: \",\n                    inputName:\"description\",\n                    maxLength:1000\n                },\n                infinite:{\n                    label: \"Infinito\",\n                    inputName:\"infinite\"\n                },\n                interval:{\n                    startDate:{\n                        label:\"Data inicial:\",\n                        inputName:\"start_date\"\n                    },\n                    endDate:{\n                        label: \"Data final:\",\n                        inputName: \"end_date\"\n                    }\n                },\n                permissionSubit:false,\n                submitButton:\"Cadastrar\"\n            }\n        }\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleToggleCheck = this.handleToggleCheck.bind(this)\n        this.handleTaskNameChange = this.handleTaskNameChange.bind(this)\n        this.handleTaskDescriptionChange = this.handleTaskDescriptionChange.bind(this)\n        this.handleStartDateChange = this.handleStartDateChange.bind(this)\n        this.handleEndDateChange = this.handleEndDateChange.bind(this)\n\n    }\n\n    formmatedCurrentDate(theDate) {\n        const dateTime = theDate || currentDate\n        return new Date(dateTime.getTime()-dateTime.getTimezoneOffset()*60000).toISOString().substring(0,19)\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n        if(this.state.name && this.state.name !== '') {\n\n            this.setState({\n                permissionSubit:true\n            })\n\n            if(!this.state.isInfinite) {\n              \n                if(!this.state.startDate) {\n                    this.newToast(\"A data inicial precisa ser registrada.\")\n                    this.setState({\n                        permissionSubit:false\n                    })\n                }\n                if(!this.state.endDate) {\n                    this.newToast(\"A data final precisa ser registrada.\")\n                    this.setState({\n                        permissionSubit:false\n                    })\n                }\n                if(this.state.startDate && this.state.startDate) {\n                    if(new Date(this.state.startDate).getTime() > new Date(this.state.endDate).getTime()) {\n                        this.newToast(\"A data final precisa ser maior que a data inicial.\")\n                        this.setState({\n                            permissionSubit:false\n                        })\n                    }\n                }\n            } else {\n                this.setState({\n                    permissionSubit:true\n                })\n            }\n            if (this.state.permissionSubit) {\n                    let task = {\n                        id_task:this.state.id,\n                        name:this.state.name,\n                        description:this.state.description,\n                        isInfinite:this.state.isInfinite,\n                        endDate:this.state.startDate,\n                        startDate:this.state.endDate\n                                        \n                    }\n                    console.log(`${baseUrlBackend}/update-task`)\n                    axios.post(`${baseUrlBackend}/update-task`,task).then(resp =>{\n                        localStorage.setItem('SessionToken', resp.data.token)\n                        this.newToast(\"Tarefa atualizada com sucesso!\")\n                        window.location.href = \"/home\"\n                    }).catch(err => {\n                        console.log(err.response.status)\n                        switch(err.response.status){\n                            case 409: \n                            this.newToast(\"Tarefa não encontrada!\");\n                            break\n                            default:  \n                            this.newToast(\"Ocorreu um erro com o servidor, tente novamente mais tarde.\")\n                        }\n                    })\n            } \n        } else {\n            if (!this.state.name) {\n                this.newToast(\"Preencha o nome da tarefa.\")\n            }else{\n                this.newToast(\"Existem campos inválidos.\")\n            }\n        }\n\n    }\n\n    componentDidMount() {\n        this.setState({\n            isInfinite:true\n        })\n    }\n\n    handleToggleCheck() {\n       this.setState({\n           isInfinite:!this.state.isInfinite\n       })\n    }\n\n    handleTaskNameChange(event) {\n        this.setState({name: event.target.value});\n    }\n\n    handleTaskDescriptionChange(event) {\n        this.setState({description: event.target.value});\n    }\n\n    handleStartDateChange(event) {\n        this.setState({startDate: event.target.value});\n    }\n    handleEndDateChange(event) {\n        this.setState({endDate: event.target.value});\n    }\n\n    addDays(date, days) {\n        var result = new Date(date);\n        result.setDate(result.getDate() + days);\n        return result;\n    }\n\n    newToast = (message) => {\n        this.setState({toastMessage:message}, () => {\n            this.child.current.show()\n        })\n        \n    }\n\n    formInterval() {\n        const { formRegister, startDate, endDate } = this.state\n            return  (<div>\n            <div className=\"form-control\">\n            <label>{formRegister.interval.startDate.label}</label>\n                    <input type=\"datetime-local\" onChange={this.handleStartDateChange} name={formRegister.interval.startDate.inputName} id={formRegister.interval.startDate.inputName} value={startDate} min=\"2018-06-07T00:00\" max=\"2018-06-14T00:00\" />\n            </div>\n            <div className=\"form-control\">\n            <label>{formRegister.interval.endDate.label}</label>\n                    <input type=\"datetime-local\" onChange={this.handleEndDateChange} name={formRegister.interval.endDate.inputName} id={formRegister.interval.endDate.inputName} value={endDate} />\n            </div>\n    </div>)\n  \n    }\n\n    render() {\n\n        const { formRegister, isInfinite, name, description } = this.state\n\n        const dateInterval = this.formInterval()\n\n        return (\n              \n            <Fragment>\n                <Main {...headerProps}>\n                <Toast message={this.state.toastMessage} time={3000} ref={this.child}/>\n                    <form>\n                        <div className=\"form-control\">\n                            <label>{formRegister.name.label}</label>\n                            <input id={formRegister.name.inputName} name={formRegister.name.inputName} onChange={this.handleTaskNameChange} type=\"text\" value={name} maxLength={formRegister.name.maxLength} />\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.description.description}</label>\n                            <textarea name={formRegister.description.inputName} onChange={this.handleTaskDescriptionChange} id={formRegister.description.inputName} rows=\"20\" cols=\"50\" maxlength={formRegister.description.maxLength}>{description}</textarea>\n                        </div>\n                        <div className=\"form-control\">\n                            <label>{formRegister.infinite.label}</label>\n                            <input onChange={this.handleToggleCheck} value={isInfinite} id={formRegister.infinite.inputName} name={formRegister.infinite.inputName} type=\"checkbox\" />\n                        </div>\n                         {isInfinite && dateInterval}\n                        <div className=\"d-flex  flex-row-reverse\">\n                            <button onClick={e=>this.handleSubmit(e)}>{formRegister.submitButton}</button>\n                        </div>\n                    </form>\n                </Main>\n            </Fragment>\n        )\n    }\n\n}","import React, {useParams} from 'react'\nimport {Switch, Route, Redirect} from 'react-router'\n\nimport Home from '../components/home/Home'\n// import CrudTests from '../components/user/CrudTests'\n// import Login from '../components/login/Login'\n// import Register from '../components/register/Register'\nimport WithAuth from '../components/utils/WithAuth'\nimport UserRegister from '../components/registers/UserRegister'\nimport ListUsers from '../components/lists/ListUsers'\nimport TaskRegister from '../components/registers/TaskRegister'\nimport ListTasks from '../components/lists/ListTasks'\nimport EditTask from '../components/edit/EditTask'\nimport ShowTask from '../components/display/ShowTask'\n\n\nexport default props => {\n    let commomProps = props\n    // let ProtectedTestsPage = WithAuth(CrudTests)\n\n    const loginProps = {\n        input1_placeholder:'Digite seu usuário',\n        input2_placeholder:'Digite sua senha',\n        input1_label:'Usuário: ',  \n        input2_label:'Senha: ',                              //Label of this form\n        input1_textHelper:'Preencha o usuário corretamente.',        //Default text message\n        input2_textHelper: 'Preencha a senha corretamente.',     \n        input1_validation: [{\n                 validationType:\"password\",\n                 textWhenInvalid:\"Digite uma senha válida\"},\n             {\n             validationType:\"length\",\n             args:{ min:4, max: 10 },\n             textWhenInvalid:\"O usuário deve ter pelo menos 4 caracteres e o máximo de 10 caracteres.\"}\n         ],\n        input2_validation: [{\n                     validationType:\"length\",\n                     textWhenInvalid:\"Sua senha deve ter pelo menos 8 caracteres.\",\n                     args:{ min:8, max: 150 }\n        }]\n                 \n     }\n\n     const openEditTask = (commomProps) => {\n        commomProps.id = commomProps.match.params.id\n        return (<EditTask {...commomProps} />)\n    }\n\n    //Outras formas de fazer o link\n    //<Route exact path='/' component={Home}/>\n    //<Route path='/users' render={props => <UserCrud {...myProps} />}/>\n    const apiRegex = /^\\/backend\\/.*/\n    // if using \"/api/\" in the pathname, don't use React Router\n    if (apiRegex.test(window.location.pathname)) {\n       return <div /> // must return at least an empty div\n    } else {\n\n        return(\n        <Switch>\n            {/* <Route path='/home' render={props => <Home {...myProps} />}/> */}\n\n            \n            {/* <Route\n                path='/users'\n                render={\n                    (props) =>  <ProtectedTestsPage {...myProps}/>\n                }\n            /> */}\n\n        <Route exact path='/login' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/logout' render={props => <Home {...loginProps} />}/>\n        <Route exact path='/cadastrar-usuario' render={props => <UserRegister {...commomProps} />}/>\n        <Route exact path='/listar-usuarios' render={props => <ListUsers {...commomProps} />}/>\n        <Route exact path='/cadastrar-tarefas' render={props => <TaskRegister {...commomProps} />}/>\n        <Route exact path='/listar-tarefas' render={props => <ListTasks {...commomProps} />}/>\n        <Route exact path='/cadastrar-tarefa' render={props => <TaskRegister {...commomProps} />}/>\n        <Route exact path='/:id/ver-tarefa' render={props => <ShowTask {...commomProps} />}/>\n        <Route exact path='/:id/editar-tarefa' render={props => openEditTask(commomProps)}/>\n        \n        \n\n            <Route exact path='/' render={props => <Home {...loginProps} />}/>\n            <Route exact path='/home' render={props => <Home {...loginProps} />}/>\n            <Route exact path='/backend' render={props => <Home {...loginProps} />}/>\n            {/* <Route path='/register' render={props => <Register {...myProps} />}/> */}\n            <Redirect from='*' to='/'/>\n        </Switch>\n        )\n    }\n    \n\n    \n}\n\n\n///  <Route path='/users' component={UserCrud}/>","import './Logo.scss'\nimport logo from '../../assets/imgs/logo.png'\nimport React from 'react'\nimport {Link} from 'react-router-dom'\n\nexport default props =>\n    <aside className=\"logo\">\n        <Link to=\"/\" className=\"logo\">\n               <h2>Sistema de Tarefas</h2> \n        </Link>\n    </aside>","export default __webpack_public_path__ + \"static/media/logo.8675fd88.png\";","import './Footer.scss'\nimport React, {Fragment} from 'react'\n\nexport default props => {\n\n    return(\n    <Fragment>\n        <footer className=\"footer\">\n            <span>\n                Desenvolvido com por <strong>Ivan Ferrer</strong>.\n            </span>\n        </footer>\n        {/* <Logout/> */}\n    </Fragment>\n    )\n}\n// function Logout(){\n//     let Logout\n//     if(localStorage.getItem('SessionToken'))\n//         Logout =\n//             <div className=\"logout\">\n//                 <a href=\"/login\" onClick={() => localStorage.removeItem(\"SessionToken\")}> \n//                     <span>Logout</span>\n//                 </a>\n//             </div>\n//     else\n//         Logout = <div className=\"logout\"></div>\n//     return(Logout)\n// }","import './Nav.scss'\nimport React from 'react'\nimport { Link } from 'react-router-dom'\nexport default props => {\n\n    if(!props.authenticated){\n        return(\n        <aside className=\"menu-area\">\n            {/* <nav className=\"menu\">\n                <Link to=\"/login\">\n                    <i className=\"fa fa-sign-in\"></i>  Login\n                </Link>\n                <Link to=\"/register\">\n                    <i className=\"fa fa-sign-in\"></i>  Registrar\n                </Link>\n            </nav> */}\n        </aside>\n    )\n    }else{\n        return(\n            <aside className=\"menu-area\">\n                <nav className=\"menu\">\n                    <Link to=\"/\">\n                        <i className=\"fa fa-home\"></i>  Início\n                    </Link>\n                    <Link to=\"/users\">\n                        <i className=\"fa fa-tasks\"></i>  Testes\n                    </Link>\n                </nav>\n            </aside>\n        )\n    }\n}","import './Overlay.scss'\nimport React, {Component} from 'react'\n\n\nexport default class Overlay extends Component{\n    render(){\n        if(this.props.connection === \"Disconnected\")\n            return(\n            <div className=\"Overlay\">\n                <div className=\"errorContainer\">\n                    <div className=\"ErrorIcon\">\n                        <p className=\"fa fa-spinner fa-spin\"></p>\n                    </div>\n                    <div className=\"ErrorTitle\">{this.props.connection}</div>\n                    <div className=\"ErrorDescription\">{this.props.connectionDescription}</div>\n                </div>\n            </div>\n            )\n        else\n            return(<div></div>)\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.min.css'\nimport './TaskApp.scss'\nimport React, {Component} from 'react'\nimport {BrowserRouter} from 'react-router-dom'\n//      {HashRouter} faz a mesma navegação usando # \n\nimport Routes from './Routes'\nimport Logo from '../components/templates/Logo'\nimport Footer from '../components/templates/Footer'\nimport Nav from '../components/templates/Nav'\nimport Overlay from '../components/templates/Overlay'\nimport axios from 'axios'\nimport Toast from '../components/utils/Toast'\nimport baseUrl from '../config/baseUrl'\n\nconst baseUrlBackend = `${baseUrl.baseUrlBackend}`\n\nexport default class TaskApp extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            // connection: \"Disconnected\",\n            // connectionDescription: \"Connecting...\",\n            // setConnection: this.setConnection.bind(this),\n            // nextConnectionTry: 0,\n            // authenticated: false,\n\n            isFinite:true,\n            listTasks:[],\n            listUsers:[]\n        }\n    }\n    setConnection(connection, connectionDescription){ //If connection is !== of Connected, overlay pop up (Check overlay component)\n        this.setState({connection, connectionDescription})\n    }\n\n    newToast = (message) => {\n        this.setState({toastMessage:message})\n        this.child.current.show();\n    };\n\n    componentDidMount(){\n        // let token = localStorage.getItem('SessionToken')\n        // var headers = {\n        //     'Authorization': `bearer ${token}`\n        // }\n        var headers = {    \n            \"Access-Control-Allow-Origin\" : `${baseUrlBackend}`,\n            \"Access-Control-Allow-Headers\": \"*\", \n            //\"Access-Control-Allow-Methods\": \"GET, POST, OPTIONS, PUT, PATCH, DELETE\" ,\n            \"Access-Control-Allow-Methods\": \"GET, POST\" ,\n            \"Access-Control-Max-Age\": \"86400\",\n            \"Content-Type\": \"application/json;charset=UTF-8\"                   \n           }\n\n        let params = {\n            all:true\n        }\n        axios.post(`${baseUrlBackend}/list/task`, params, headers)\n        .then(response => {\n            this.setState({\n                listTasks:response.data.listTasks\n            })\n         \n        }).catch(err => {\n\n            if(err.response){\n               if (err.response.status === 401){\n                  this.newToast('Problemas na requisição')\n               } else {\n                  this.newToast('Ocorreu um erro de conexão') \n               }\n            }\n                //             console.log('a')\n                //             this.setState( {connection:\"Connected\", connectionDescription:\"Connected\", authenticated:false} )//Connected but not authenticated\n                //         }else{\n                //             console.log('b')\n                //             this.setState({nextConnectionTry: 10, connection:\"Disconnected\", connectionDescription:\"Server offline\"})//not cnonnected\n                //         }\n                //     }else\n                //     this.setState({nextConnectionTry: 10, connection:\"Disconnected\", connectionDescription:\"Server offline\"})//Server offline\n                // })\n\n        })\n\n        axios.post(`${baseUrlBackend}/list/user`, params, headers)\n        .then(response => {\n  \n            this.setState({\n                listUsers:response.data.listUsers\n            })\n        }).catch(err => {\n\n            if(err.response){\n               if (err.response.status === 401){\n                  this.newToast('Problemas na requisição')\n               } else {\n                  this.newToast('Ocorreu um erro de conexão') \n               }\n            }\n                //             console.log('a')\n                //             this.setState( {connection:\"Connected\", connectionDescription:\"Connected\", authenticated:false} )//Connected but not authenticated\n                //         }else{\n                //             console.log('b')\n                //             this.setState({nextConnectionTry: 10, connection:\"Disconnected\", connectionDescription:\"Server offline\"})//not cnonnected\n                //         }\n                //     }else\n                //     this.setState({nextConnectionTry: 10, connection:\"Disconnected\", connectionDescription:\"Server offline\"})//Server offline\n                // })\n\n        })\n        // axios.post(`${baseUrlBackend}auth`,'', {headers: headers} ).then(response => {//pass token as header\n        //     console.log(response)\n        //     this.setState( {connection:\"Connected\", connectionDescription:\"Connected\", authenticated: true} )//Connected AND authenticated\n        // }).catch(err => {\n        //     console.log(err)\n        //     if(err.response){\n        //         if(err.response.status === 401){\n        //             console.log('a')\n        //             this.setState( {connection:\"Connected\", connectionDescription:\"Connected\", authenticated:false} )//Connected but not authenticated\n        //         }else{\n        //             console.log('b')\n        //             this.setState({nextConnectionTry: 10, connection:\"Disconnected\", connectionDescription:\"Server offline\"})//not cnonnected\n        //         }\n        //     }else\n        //     this.setState({nextConnectionTry: 10, connection:\"Disconnected\", connectionDescription:\"Server offline\"})//Server offline\n        // })\n    }\n  \n    render(){\n        return(\n        <BrowserRouter>\n            <div className=\"task-app\">\n                <Overlay {...this.state}/>\n                <Logo />\n                <Nav {...this.state}/>\n                <Routes {...this.state}/>\n                <Footer />\n            </div>\n        </BrowserRouter>\n        )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.scss';\nimport TaskApp from './maintasks/TaskApp';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TaskApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}